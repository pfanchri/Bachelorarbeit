/**
 * @page Changelog
 * @tableofcontents
 * @section v214 Version 2.1.4
 * @subsection GENERAL GENERAL
 * - Added:
 *    - Added EtherCAT driver
 *    - Added support for XMC4300 series
 *
 * @subsection ETH_MAC ETH_MAC
 * - Fixed:
 *    - XMC_ETH_MAC_GetRxFrameSize return value in case of errors
 *
 * @subsection ETH_PHY ETH_PHY
 * - Added:
 *    - XMC_ETH_PHY_ExitPowerDown(), XMC_ETH_PHY_Reset()
 *
 * @subsection VADC VADC
 * - Fixed:
 *    - XMC_VADC_GLOBAL_TriggerEvent API fixed. OR operation removed. 
 *    - XMC_VADC_GLOBAL_ClearEvent API fixed. Multiple events triggering on clearing the event is fixed.   
 *    - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
 *      XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
 *
 * @subsection FLASH FLASH
 * - Fixed:
 *    - Flash access time
 *    - Wait until operation is finished for the next functions:
 *       1. XMC_FLASH_InstallProtection
 *       2. XMC_FLASH_ConfirmProtection
 *       3. XMC_FLASH_ProgramPage
 *       4. XMC_FLASH_EraseSector
 *       5. XMC_FLASH_ErasePhysicalSector
 *       6. XMC_FLASH_EraseUCB
 *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
 *
 * @subsection SDMMC SDMMC
 * - Added:
 *    - XMC_SDMMC_EnableDelayCmdDatLines(), XMC_SDMMC_DisableDelayCmdDatLines(), XMC_SDMMC_SetDelay(),
 *    - XMC_SDMMC_EnableHighSpeed(), XMC_SDMMC_DisableHighSpeed()
 *
 * @subsection SPI SPI
 * - Added:
 *    - XMC_SPI_CH_EnableSlaveSelectCodedMode() and XMC_SPI_CH_DisableSlaveSelectCodedMode()
 *
 * @section v212 Version 2.1.2
 * @subsection GENERAL GENERAL
 * - Added:
 *    - Added I2S driver
 *    - Added support for XMC4700 and XMC4800 series
 *
 * @subsection DSD DSD
 * - Added:
 *    - XMC_DSD_SetResultEventFlag(), XMC_DSD_ClearResultEventFlag(), XMC_DSD_SetAlarmEventFlag() and XMC_DSD_ClearAlarmEventFlag()
 *
 * @subsection CCU4 CCU4
 * - Changed:
 *    - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed
 * - Added:
 *    - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider
 *    - XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support external count direction settings
 *    - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents() and XMC_CCU4_SLICE_DisableMultipleEvents() APIs
 *    - Map files added macros with peripheral names for readability
 *
 * @subsection CCU8 CCU8
 * - Changed:
 *    - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed
 *    - XMC_CCU8_SLICE_GetEvent() is made as inline
 * - Added:
 *    - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider
 *    - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, to set when the shadow transfer has to happen
 *    - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OUT3_t enums are added to map one of the ST to OUT0, OUT1, OUT3, OUT4 signals
 *    - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2, selector_out3 are added to support XMC14 devices
 *    - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfer(),XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45
 *    - XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support external count direction settings
 *    - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2() inline APIs are added to update the respective compare registers directly
 *    - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents() and XMC_CCU8_SLICE_DisableMultipleEvents() APIs
 *    - Map files added macros with peripheral names for readability
 *
 * @subsection I2C I2C
 * - Changed:
 *    - XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting
 *    - XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_DisableEvent() for supporting multiple events configuration
 * - Added:
 *    - APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalToBRG()
 *    - APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_EnableAcknowledgeAddress0() and XMC_I2C_CH_DisableAcknowledgeAddress0()
 * - Fixed: 
 *    - 10bit addressing
 *
 * @subsection SPI SPI
 * - Changed:
 *    - XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting
 *    - XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_DisableEvent() for supporting multiple events configuration
 * - Added:
 *    - APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation() and XMC_SPI_CH_EnableDelayCompensation()
 *    - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalToBRG()
 *    - API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedInTrailingEdge() and XMC_SPI_CH_DataLatchedInLeadingEdge()
 *
 * @subsection UART UART
 * - Changed:
 *    - XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting
 *    - XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH_DisableEvent() for supporting multiple events configuration
 *
 * @subsection FLASH FLASH
 * - Added:
 *    - XMC_FLASH_Reset
 *    - XMC_FLASH_ErasePhysicalSector
 *    - XMC_FLASH_EraseUCB
 *    - XMC_FLASH_ResumeProtection
 *    - XMC_FLASH_RepairPhysicalSector 
 * 
 * @subsection WDT WDT
 * - Fixed:
 *    - XMC_WDT_SetDebugMode() API, Wrong register is being configured
 *
 * @subsection VADC VADC
 * - Added:
 *    - XMC_VADC_GLOBAL_SetIndividualBoundary
 *    - XMC_VADC_GROUP_SetIndividualBoundary
 *    - XMC_VADC_GROUP_GetAlias
 *    - XMC_VADC_GROUP_GetInputClass
 *    - XMC_VADC_GROUP_ChannelSetIclass
 *    - XMC_VADC_GROUP_ChannelGetResultAlignment
 *    - XMC_VADC_GROUP_ChannelGetInputClass
 *    - XMC_VADC_GROUP_SetResultSubtractionValue
 *
 * @subsection SCU SCU
 * - Added:
 *    - XMC_SCU_CLOCK_SetDeepSleepConfig(),XMC_SCU_CLOCK_SetSleepConfig()
 *
 * @subsection CAN CAN
 * - Added:
 *    - XMC48/47 new signature for XMC_CAN_GetBaudrateClockFrequency(), XMC_CAN_Init(), XMC_CAN_SetBaudrateClockSource(), XMC_CAN_GetBaudrateClockSource() 
 *
 * @section v200 Version 2.0.0
 * @subsection GENERAL GENERAL
 * - Removed:
 *    - version macros and declaration of GetDriverVersion()
 *
 * @subsection CAN CAN
 * - Added:
 *    - XMC_CAN_NODE_ClearStatus()
 *    - XMC_CAN_MO_ReceiveData()
 *    - XMC_CAN_GATEWAY_InitDesObject()
 *    - XMC_CAN_NODE_Enable()
 * - Changed:
 *    - XMC_CAN_MO_Config(). Changed signature.
 * - Fixed:
 *    - XMC_CAN_TXFIFO_ConfigMOSlaveObject()
 *
 * @subsection CCU4 CCU4
 * - Fixed:
 *    - XMC_CCU4_SLICE_StartConfig(). Assert condition.
 *
 * @subsection CCU8 CCU8
 * - Added:
 *    - XMC_CCU8_SLICE_LoadSelector()
 * - Fixed:
 *    - XMC_CCU8_SLICE_CHECK_INTERRUPT macro. Fixed the missing item for compare match down for channel 2
 *
 * @subsection DMA DMA
 * - Added:
 *    - XMC_DMA_DisableRequestLine()
 *    - XMC_DMA_ClearRequestLine()
 *    - XMC_DMA_CH_ClearSourcePeripheralRequest()
 *    - XMC_DMA_CH_ClearDestinationPeripheralRequest()
 * - Changed:
 *    - XMC_DMA_LLI_t structure. Members src_addr and dst_addr are now uint32_t.
 *    - XMC_DMA_CH_SetSourceAddress(). Changed type of addr parameter to uint32_t
 *    - XMC_DMA_CH_SetdestinationAddress(). Changed type of addr parameter to uint32_t
 *
 * @subsection HRPWM HRPWM
 * - Added:
 *    - XMC_HRPWM_CSG_SelClampingInput()
 *    - XMC_HRPWM_SHADOW_TX_DAC_t 
 * - Fixed:
 *    - CSG trimming data assignment is corrected.
 * - Removed:
 *    - XMC_HRPWM_SHADOW_TX_t. Gets renamed to XMC_HRPWM_SHADOW_TX_DAC_t 
 *
 * @subsection I2C I2C
 * - Added:
 *    - XMC_I2C_CH_TriggerServiceRequest()
 *    - XMC_I2C_CH_SelectInterruptNodePointer()
 * - Fixed:
 *    - XMC_I2C_CH_Stop(). Check if transmission is going before setting the channel to idle.
 * 
 * @subsection LEDTS LEDTS
 * - Added: 
 *    - XMC_LEDTS_SetActivePADNo()
 * 
 * @subsection POSIF POSIF
 * - Changed:
 *    - XMC_POSIF_QD_GetDirection(). Fixed read direction
 * 
 * @subsection RTC RTC
 * - Changed:
 *    - XMC_RTC_Init(). Check RTC running condition.
 * 
 * @subsection SCU SCU
 * - Added:
 *    - For XMC11 series, XMC_SCU_SetRawTempLimits()
 *    - For XMC11 series, XMC_SCU_StartTempMeasurement()
 *    - For XMC11 series, XMC_SCU_StopTempMeasurement() 
 *    - For XMC11 series, XMC_SCU_HighTemperature() 
 *    - For XMC11 series, XMC_SCU_LowTemperature() 
 *    - For XMC11 series, XMC_SCU_GetTemperature() 
 * - Changed:
 *    - XMC_SCU_INTERRUPT_SetEventHandler(). New implementation
 *    - XMC_SCU_IRQHandler(). New implementation
 * 
 * @subsection SPI SPI
 * - Added: 
 *    - XMC_SPI_CH_SetSlaveSelectDelay()
 *    - XMC_SPI_CH_TriggerServiceRequest()
 *    - XMC_SPI_CH_SelectInterruptNodePointer()
 *    - XMC_SPI_CH_SetInterwordDelaySCLK()
 * 
 * @subsection UART UART
 * - Added:
 *    - XMC_UART_CH_TriggerServiceRequest()
 *    - XMC_UART_CH_SelectInterruptNodePointer()
 * - Fixed:
 *    - XMC_UART_CH_INPUT_t enum contents.
 *    - XMC_UART_CH_Stop(). Check if transmission is going before setting the channel to idle.
 *
 * @subsection USBD USBD
 * - Fixed:
 *    - XMC_USBD_EndpointStall(). Fix issue on USB clear stall
 *    - XMC_USBD_EndpointConfigure(). Fix issue in EP0 configuration
 *    - XMC_USBD_Disable(). Gate the clock after programming the SCU registers
 *    - XMC_USBD_IRQHandler(). Removed the DAVE_CE check on SOF event
 *  
 * @subsection VADC VADC 
 * - Added:
 *     - XMC_VADC_GLOBAL_SHS_Init()
 *     - XMC_VADC_GLOBAL_SHS_SetStepperSequence()
 *     - XMC_VADC_GLOBAL_SHS_IsConverterReady()
 *     - XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode()
 *     - XMC_VADC_GLOBAL_SHS_SetGainFactor()
 *     - XMC_VADC_GLOBAL_SHS_SetMaxCalTime()
 *     - XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()
 *     - XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()
 *     - XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()
 *     - XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()
 *     - XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()
 *     - XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()
 *     - XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop()
 *     - XMC_VADC_GROUP_SetBoundaryEventInterruptNode()
 *     - XMC_VADC_GROUP_ScanSelectTriggerEdge()
 *     - XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge()
 *     - XMC_VADC_GROUP_QueueSelectTriggerEdge()
 *     - XMC_VADC_GROUP_QueueFlushEntries()
 *     - XMC_VADC_GROUP_ChannelSetBoundarySelection()
 * - Changed:
 *     - XMC_VADC_GLOBAL_GetResult(). Remove unnecessary masking, return result as 16bit.
 *     - XMC_VADC_GROUP_GetResult(). Remove unnecessary masking, return result as 16bit.
 * - Fixed:
 *     - XMC_VADC_GROUP_ExternalMuxControlInit(). 
 *     - XMC_VADC_GLOBAL_SHS_SetClockDivider(). Disable write protection of DIVS bitfield. 
 *     - XMC_VADC_GROUP_ScanSetGatingMode(). Clear current gating before applying the new requested one.
 *     - XMC_VADC_GLOBAL_BackgroundSetGatingMode(). Clear current gating before applying the new requested one.
 *     - XMC_VADC_GROUP_QueueSetGatingMode(). Clear current gating before applying the new requested one.
 * 
 * @section v100 Version 1.0.0
 * - Initial version
 */
