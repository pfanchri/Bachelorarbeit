   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB160:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****   *************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  *      
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  54:../Libraries/XMCLib/src/xmc_ledts.c **** 
  55:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  57:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  58:../Libraries/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  59:../Libraries/XMCLib/src/xmc_ledts.c **** 
  60:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  61:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  62:../Libraries/XMCLib/src/xmc_ledts.c **** 
  63:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  65:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  67:../Libraries/XMCLib/src/xmc_ledts.c **** 
  68:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  70:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_ledts.c **** 
  72:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  74:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_ledts.c **** 
  76:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  78:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_ledts.c **** 
  80:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  82:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_ledts.c **** 
  84:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  86:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_ledts.c **** 
  88:../Libraries/XMCLib/src/xmc_ledts.c **** /**
  89:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  90:../Libraries/XMCLib/src/xmc_ledts.c ****   */
  91:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  92:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 92 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
  93:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  94:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  95:../Libraries/XMCLib/src/xmc_ledts.c **** 
  96:../Libraries/XMCLib/src/xmc_ledts.c ****   switch ((uint32_t)ledts)
  45              	 .loc 1 96 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0B4A     	 ldr r2,.L6
  48 000e 9342     	 cmp r3,r2
  49 0010 03D1     	 bne .L2
  97:../Libraries/XMCLib/src/xmc_ledts.c ****   {
  98:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS0:
  99:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 100:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
 101:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 102:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 103:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  50              	 .loc 1 103 0
  51 0012 0B48     	 ldr r0,.L6+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 104:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 105:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
  53              	 .loc 1 105 0
  54 0018 00BF     	 nop
  55              	.L2:
 106:../Libraries/XMCLib/src/xmc_ledts.c **** 
 107:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 108:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS1:
 109:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 112:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 115:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 117:../Libraries/XMCLib/src/xmc_ledts.c **** 
 118:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 119:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS2:
 120:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 121:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 123:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 124:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 125:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 126:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 128:../Libraries/XMCLib/src/xmc_ledts.c ****       
 129:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 130:../Libraries/XMCLib/src/xmc_ledts.c **** 
 131:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  56              	 .loc 1 131 0
  57 001a 7B68     	 ldr r3,[r7,#4]
  58 001c 5B68     	 ldr r3,[r3,#4]
  59 001e 1B0C     	 lsrs r3,r3,#16
  60 0020 1B04     	 lsls r3,r3,#16
  61 0022 002B     	 cmp r3,#0
  62 0024 01D0     	 beq .L4
 132:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 133:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  63              	 .loc 1 133 0
  64 0026 0123     	 movs r3,#1
  65 0028 04E0     	 b .L5
  66              	.L4:
 134:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 135:../Libraries/XMCLib/src/xmc_ledts.c **** 
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  67              	 .loc 1 136 0
  68 002a 3B68     	 ldr r3,[r7]
  69 002c 1A68     	 ldr r2,[r3]
  70 002e 7B68     	 ldr r3,[r7,#4]
  71 0030 5A60     	 str r2,[r3,#4]
 137:../Libraries/XMCLib/src/xmc_ledts.c **** 
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  72              	 .loc 1 138 0
  73 0032 0023     	 movs r3,#0
  74              	.L5:
 139:../Libraries/XMCLib/src/xmc_ledts.c **** }
  75              	 .loc 1 139 0
  76 0034 1846     	 mov r0,r3
  77 0036 0837     	 adds r7,r7,#8
  78              	.LCFI3:
  79              	 .cfi_def_cfa_offset 8
  80 0038 BD46     	 mov sp,r7
  81              	.LCFI4:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 003a 80BD     	 pop {r7,pc}
  85              	.L7:
  86              	 .align 2
  87              	.L6:
  88 003c 00000148 	 .word 1208025088
  89 0040 08000010 	 .word 268435464
  90              	 .cfi_endproc
  91              	.LFE160:
  93              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  94              	 .align 2
  95              	 .global XMC_LEDTS_InitLED
  96              	 .thumb
  97              	 .thumb_func
  99              	XMC_LEDTS_InitLED:
 100              	.LFB161:
 140:../Libraries/XMCLib/src/xmc_ledts.c **** 
 141:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 142:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 143:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 144:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 145:../Libraries/XMCLib/src/xmc_ledts.c **** {
 101              	 .loc 1 145 0
 102              	 .cfi_startproc
 103              	 
 104              	 
 105              	 
 106 0000 80B4     	 push {r7}
 107              	.LCFI5:
 108              	 .cfi_def_cfa_offset 4
 109              	 .cfi_offset 7,-4
 110 0002 83B0     	 sub sp,sp,#12
 111              	.LCFI6:
 112              	 .cfi_def_cfa_offset 16
 113 0004 00AF     	 add r7,sp,#0
 114              	.LCFI7:
 115              	 .cfi_def_cfa_register 7
 116 0006 7860     	 str r0,[r7,#4]
 117 0008 3960     	 str r1,[r7]
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 147:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 148:../Libraries/XMCLib/src/xmc_ledts.c **** 
 149:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 118              	 .loc 1 149 0
 119 000a 7B68     	 ldr r3,[r7,#4]
 120 000c 5B68     	 ldr r3,[r3,#4]
 121 000e 1B0C     	 lsrs r3,r3,#16
 122 0010 1B04     	 lsls r3,r3,#16
 123 0012 002B     	 cmp r3,#0
 124 0014 01D0     	 beq .L9
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 151:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 125              	 .loc 1 151 0
 126 0016 0123     	 movs r3,#1
 127 0018 13E0     	 b .L10
 128              	.L9:
 152:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 153:../Libraries/XMCLib/src/xmc_ledts.c **** 
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 129              	 .loc 1 154 0
 130 001a 7B68     	 ldr r3,[r7,#4]
 131 001c 9B68     	 ldr r3,[r3,#8]
 132 001e 23F07042 	 bic r2,r3,#-268435456
 133 0022 7B68     	 ldr r3,[r7,#4]
 134 0024 9A60     	 str r2,[r3,#8]
 155:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 135              	 .loc 1 155 0
 136 0026 7B68     	 ldr r3,[r7,#4]
 137 0028 9A68     	 ldr r2,[r3,#8]
 138 002a 3B68     	 ldr r3,[r7]
 139 002c 1B68     	 ldr r3,[r3]
 140 002e 1A43     	 orrs r2,r2,r3
 141 0030 7B68     	 ldr r3,[r7,#4]
 142 0032 9A60     	 str r2,[r3,#8]
 156:../Libraries/XMCLib/src/xmc_ledts.c **** 
 157:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 143              	 .loc 1 158 0
 144 0034 7B68     	 ldr r3,[r7,#4]
 145 0036 5B68     	 ldr r3,[r3,#4]
 146 0038 43F00202 	 orr r2,r3,#2
 147 003c 7B68     	 ldr r3,[r7,#4]
 148 003e 5A60     	 str r2,[r3,#4]
 159:../Libraries/XMCLib/src/xmc_ledts.c **** 
 160:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 149              	 .loc 1 160 0
 150 0040 0023     	 movs r3,#0
 151              	.L10:
 161:../Libraries/XMCLib/src/xmc_ledts.c **** }
 152              	 .loc 1 161 0
 153 0042 1846     	 mov r0,r3
 154 0044 0C37     	 adds r7,r7,#12
 155              	.LCFI8:
 156              	 .cfi_def_cfa_offset 4
 157 0046 BD46     	 mov sp,r7
 158              	.LCFI9:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 0048 5DF8047B 	 ldr r7,[sp],#4
 162              	.LCFI10:
 163              	 .cfi_restore 7
 164              	 .cfi_def_cfa_offset 0
 165 004c 7047     	 bx lr
 166              	 .cfi_endproc
 167              	.LFE161:
 169 004e 00BF     	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 170              	 .align 2
 171              	 .global XMC_LEDTS_InitTSBasic
 172              	 .thumb
 173              	 .thumb_func
 175              	XMC_LEDTS_InitTSBasic:
 176              	.LFB162:
 162:../Libraries/XMCLib/src/xmc_ledts.c **** 
 163:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 165:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 166:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 167:../Libraries/XMCLib/src/xmc_ledts.c **** {
 177              	 .loc 1 167 0
 178              	 .cfi_startproc
 179              	 
 180              	 
 181              	 
 182 0000 80B4     	 push {r7}
 183              	.LCFI11:
 184              	 .cfi_def_cfa_offset 4
 185              	 .cfi_offset 7,-4
 186 0002 85B0     	 sub sp,sp,#20
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 24
 189 0004 00AF     	 add r7,sp,#0
 190              	.LCFI13:
 191              	 .cfi_def_cfa_register 7
 192 0006 7860     	 str r0,[r7,#4]
 193 0008 3960     	 str r1,[r7]
 168:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 169:../Libraries/XMCLib/src/xmc_ledts.c **** 
 170:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 171:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 172:../Libraries/XMCLib/src/xmc_ledts.c **** 
 173:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 194              	 .loc 1 173 0
 195 000a 7B68     	 ldr r3,[r7,#4]
 196 000c 5B68     	 ldr r3,[r3,#4]
 197 000e 1B0C     	 lsrs r3,r3,#16
 198 0010 1B04     	 lsls r3,r3,#16
 199 0012 002B     	 cmp r3,#0
 200 0014 01D0     	 beq .L12
 174:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 175:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 201              	 .loc 1 175 0
 202 0016 0123     	 movs r3,#1
 203 0018 15E0     	 b .L13
 204              	.L12:
 176:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 177:../Libraries/XMCLib/src/xmc_ledts.c **** 
 178:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 205              	 .loc 1 178 0
 206 001a 0E4B     	 ldr r3,.L14
 207 001c FB60     	 str r3,[r7,#12]
 179:../Libraries/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 208              	 .loc 1 180 0
 209 001e 7B68     	 ldr r3,[r7,#4]
 210 0020 9A68     	 ldr r2,[r3,#8]
 211 0022 FB68     	 ldr r3,[r7,#12]
 212 0024 1A40     	 ands r2,r2,r3
 213 0026 7B68     	 ldr r3,[r7,#4]
 214 0028 9A60     	 str r2,[r3,#8]
 181:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 215              	 .loc 1 181 0
 216 002a 7B68     	 ldr r3,[r7,#4]
 217 002c 9A68     	 ldr r2,[r3,#8]
 218 002e 3B68     	 ldr r3,[r7]
 219 0030 1B68     	 ldr r3,[r3]
 220 0032 1A43     	 orrs r2,r2,r3
 221 0034 7B68     	 ldr r3,[r7,#4]
 222 0036 9A60     	 str r2,[r3,#8]
 182:../Libraries/XMCLib/src/xmc_ledts.c **** 
 183:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 184:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 223              	 .loc 1 184 0
 224 0038 7B68     	 ldr r3,[r7,#4]
 225 003a 5B68     	 ldr r3,[r3,#4]
 226 003c 43F00102 	 orr r2,r3,#1
 227 0040 7B68     	 ldr r3,[r7,#4]
 228 0042 5A60     	 str r2,[r3,#4]
 185:../Libraries/XMCLib/src/xmc_ledts.c **** 
 186:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 229              	 .loc 1 186 0
 230 0044 0023     	 movs r3,#0
 231              	.L13:
 187:../Libraries/XMCLib/src/xmc_ledts.c **** }
 232              	 .loc 1 187 0
 233 0046 1846     	 mov r0,r3
 234 0048 1437     	 adds r7,r7,#20
 235              	.LCFI14:
 236              	 .cfi_def_cfa_offset 4
 237 004a BD46     	 mov sp,r7
 238              	.LCFI15:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 004c 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI16:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 0050 7047     	 bx lr
 246              	.L15:
 247 0052 00BF     	 .align 2
 248              	.L14:
 249 0054 FFFF60F0 	 .word -262078465
 250              	 .cfi_endproc
 251              	.LFE162:
 253              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 254              	 .align 2
 255              	 .global XMC_LEDTS_InitTSAdvanced
 256              	 .thumb
 257              	 .thumb_func
 259              	XMC_LEDTS_InitTSAdvanced:
 260              	.LFB163:
 188:../Libraries/XMCLib/src/xmc_ledts.c **** 
 189:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 191:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 192:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 193:../Libraries/XMCLib/src/xmc_ledts.c **** {
 261              	 .loc 1 193 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265              	 
 266 0000 80B4     	 push {r7}
 267              	.LCFI17:
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 85B0     	 sub sp,sp,#20
 271              	.LCFI18:
 272              	 .cfi_def_cfa_offset 24
 273 0004 00AF     	 add r7,sp,#0
 274              	.LCFI19:
 275              	 .cfi_def_cfa_register 7
 276 0006 7860     	 str r0,[r7,#4]
 277 0008 3960     	 str r1,[r7]
 194:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 195:../Libraries/XMCLib/src/xmc_ledts.c **** 
 196:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 197:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 198:../Libraries/XMCLib/src/xmc_ledts.c **** 
 199:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 278              	 .loc 1 199 0
 279 000a 7B68     	 ldr r3,[r7,#4]
 280 000c 5B68     	 ldr r3,[r3,#4]
 281 000e 1B0C     	 lsrs r3,r3,#16
 282 0010 1B04     	 lsls r3,r3,#16
 283 0012 002B     	 cmp r3,#0
 284 0014 01D0     	 beq .L17
 200:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 201:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 285              	 .loc 1 201 0
 286 0016 0123     	 movs r3,#1
 287 0018 1FE0     	 b .L18
 288              	.L17:
 202:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 203:../Libraries/XMCLib/src/xmc_ledts.c **** 
 204:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 289              	 .loc 1 204 0
 290 001a 6FF4F053 	 mvn r3,#7680
 291 001e FB60     	 str r3,[r7,#12]
 205:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 292              	 .loc 1 205 0
 293 0020 7B68     	 ldr r3,[r7,#4]
 294 0022 5A68     	 ldr r2,[r3,#4]
 295 0024 FB68     	 ldr r3,[r7,#12]
 296 0026 1A40     	 ands r2,r2,r3
 297 0028 7B68     	 ldr r3,[r7,#4]
 298 002a 5A60     	 str r2,[r3,#4]
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 299              	 .loc 1 206 0
 300 002c 7B68     	 ldr r3,[r7,#4]
 301 002e 5A68     	 ldr r2,[r3,#4]
 302 0030 3B68     	 ldr r3,[r7]
 303 0032 1B68     	 ldr r3,[r3]
 304 0034 1A43     	 orrs r2,r2,r3
 305 0036 7B68     	 ldr r3,[r7,#4]
 306 0038 5A60     	 str r2,[r3,#4]
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 307              	 .loc 1 208 0
 308 003a 0B4B     	 ldr r3,.L19
 309 003c FB60     	 str r3,[r7,#12]
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 310              	 .loc 1 209 0
 311 003e 7B68     	 ldr r3,[r7,#4]
 312 0040 9A68     	 ldr r2,[r3,#8]
 313 0042 FB68     	 ldr r3,[r7,#12]
 314 0044 1A40     	 ands r2,r2,r3
 315 0046 7B68     	 ldr r3,[r7,#4]
 316 0048 9A60     	 str r2,[r3,#8]
 210:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 317              	 .loc 1 210 0
 318 004a 7B68     	 ldr r3,[r7,#4]
 319 004c 9A68     	 ldr r2,[r3,#8]
 320 004e 3B68     	 ldr r3,[r7]
 321 0050 5B68     	 ldr r3,[r3,#4]
 322 0052 1A43     	 orrs r2,r2,r3
 323 0054 7B68     	 ldr r3,[r7,#4]
 324 0056 9A60     	 str r2,[r3,#8]
 211:../Libraries/XMCLib/src/xmc_ledts.c **** 
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 325              	 .loc 1 212 0
 326 0058 0023     	 movs r3,#0
 327              	.L18:
 213:../Libraries/XMCLib/src/xmc_ledts.c **** }
 328              	 .loc 1 213 0
 329 005a 1846     	 mov r0,r3
 330 005c 1437     	 adds r7,r7,#20
 331              	.LCFI20:
 332              	 .cfi_def_cfa_offset 4
 333 005e BD46     	 mov sp,r7
 334              	.LCFI21:
 335              	 .cfi_def_cfa_register 13
 336              	 
 337 0060 5DF8047B 	 ldr r7,[sp],#4
 338              	.LCFI22:
 339              	 .cfi_restore 7
 340              	 .cfi_def_cfa_offset 0
 341 0064 7047     	 bx lr
 342              	.L20:
 343 0066 00BF     	 .align 2
 344              	.L19:
 345 0068 E0FF9FFF 	 .word -6291488
 346              	 .cfi_endproc
 347              	.LFE163:
 349              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 350              	 .align 2
 351              	 .global XMC_LEDTS_StartCounter
 352              	 .thumb
 353              	 .thumb_func
 355              	XMC_LEDTS_StartCounter:
 356              	.LFB164:
 214:../Libraries/XMCLib/src/xmc_ledts.c **** 
 215:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 217:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 218:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 219:../Libraries/XMCLib/src/xmc_ledts.c **** {
 357              	 .loc 1 219 0
 358              	 .cfi_startproc
 359              	 
 360              	 
 361              	 
 362 0000 80B4     	 push {r7}
 363              	.LCFI23:
 364              	 .cfi_def_cfa_offset 4
 365              	 .cfi_offset 7,-4
 366 0002 83B0     	 sub sp,sp,#12
 367              	.LCFI24:
 368              	 .cfi_def_cfa_offset 16
 369 0004 00AF     	 add r7,sp,#0
 370              	.LCFI25:
 371              	 .cfi_def_cfa_register 7
 372 0006 7860     	 str r0,[r7,#4]
 373 0008 0B46     	 mov r3,r1
 374 000a 7B80     	 strh r3,[r7,#2]
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 221:../Libraries/XMCLib/src/xmc_ledts.c **** 
 222:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 375              	 .loc 1 222 0
 376 000c 7B68     	 ldr r3,[r7,#4]
 377 000e 5B68     	 ldr r3,[r3,#4]
 378 0010 7A88     	 ldrh r2,[r7,#2]
 379 0012 1204     	 lsls r2,r2,#16
 380 0014 1A43     	 orrs r2,r2,r3
 381 0016 7B68     	 ldr r3,[r7,#4]
 382 0018 5A60     	 str r2,[r3,#4]
 223:../Libraries/XMCLib/src/xmc_ledts.c **** }
 383              	 .loc 1 223 0
 384 001a 0C37     	 adds r7,r7,#12
 385              	.LCFI26:
 386              	 .cfi_def_cfa_offset 4
 387 001c BD46     	 mov sp,r7
 388              	.LCFI27:
 389              	 .cfi_def_cfa_register 13
 390              	 
 391 001e 5DF8047B 	 ldr r7,[sp],#4
 392              	.LCFI28:
 393              	 .cfi_restore 7
 394              	 .cfi_def_cfa_offset 0
 395 0022 7047     	 bx lr
 396              	 .cfi_endproc
 397              	.LFE164:
 399              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 400              	 .align 2
 401              	 .global XMC_LEDTS_StopCounter
 402              	 .thumb
 403              	 .thumb_func
 405              	XMC_LEDTS_StopCounter:
 406              	.LFB165:
 224:../Libraries/XMCLib/src/xmc_ledts.c **** 
 225:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 226:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 227:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 228:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 229:../Libraries/XMCLib/src/xmc_ledts.c **** {
 407              	 .loc 1 229 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412 0000 80B4     	 push {r7}
 413              	.LCFI29:
 414              	 .cfi_def_cfa_offset 4
 415              	 .cfi_offset 7,-4
 416 0002 83B0     	 sub sp,sp,#12
 417              	.LCFI30:
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	.LCFI31:
 421              	 .cfi_def_cfa_register 7
 422 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 231:../Libraries/XMCLib/src/xmc_ledts.c **** 
 232:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 423              	 .loc 1 232 0
 424 0008 7B68     	 ldr r3,[r7,#4]
 425 000a 5B68     	 ldr r3,[r3,#4]
 426 000c 9AB2     	 uxth r2,r3
 427 000e 7B68     	 ldr r3,[r7,#4]
 428 0010 5A60     	 str r2,[r3,#4]
 233:../Libraries/XMCLib/src/xmc_ledts.c **** }
 429              	 .loc 1 233 0
 430 0012 0C37     	 adds r7,r7,#12
 431              	.LCFI32:
 432              	 .cfi_def_cfa_offset 4
 433 0014 BD46     	 mov sp,r7
 434              	.LCFI33:
 435              	 .cfi_def_cfa_register 13
 436              	 
 437 0016 5DF8047B 	 ldr r7,[sp],#4
 438              	.LCFI34:
 439              	 .cfi_restore 7
 440              	 .cfi_def_cfa_offset 0
 441 001a 7047     	 bx lr
 442              	 .cfi_endproc
 443              	.LFE165:
 445              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 446              	 .align 2
 447              	 .global XMC_LEDTS_ReadInterruptFlag
 448              	 .thumb
 449              	 .thumb_func
 451              	XMC_LEDTS_ReadInterruptFlag:
 452              	.LFB166:
 234:../Libraries/XMCLib/src/xmc_ledts.c **** 
 235:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 236:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 237:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 238:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 239:../Libraries/XMCLib/src/xmc_ledts.c **** {
 453              	 .loc 1 239 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457              	 
 458 0000 80B4     	 push {r7}
 459              	.LCFI35:
 460              	 .cfi_def_cfa_offset 4
 461              	 .cfi_offset 7,-4
 462 0002 83B0     	 sub sp,sp,#12
 463              	.LCFI36:
 464              	 .cfi_def_cfa_offset 16
 465 0004 00AF     	 add r7,sp,#0
 466              	.LCFI37:
 467              	 .cfi_def_cfa_register 7
 468 0006 7860     	 str r0,[r7,#4]
 240:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 241:../Libraries/XMCLib/src/xmc_ledts.c **** 
 242:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 469              	 .loc 1 242 0
 470 0008 7B68     	 ldr r3,[r7,#4]
 471 000a DB68     	 ldr r3,[r3,#12]
 472 000c 03F00F03 	 and r3,r3,#15
 243:../Libraries/XMCLib/src/xmc_ledts.c **** }
 473              	 .loc 1 243 0
 474 0010 1846     	 mov r0,r3
 475 0012 0C37     	 adds r7,r7,#12
 476              	.LCFI38:
 477              	 .cfi_def_cfa_offset 4
 478 0014 BD46     	 mov sp,r7
 479              	.LCFI39:
 480              	 .cfi_def_cfa_register 13
 481              	 
 482 0016 5DF8047B 	 ldr r7,[sp],#4
 483              	.LCFI40:
 484              	 .cfi_restore 7
 485              	 .cfi_def_cfa_offset 0
 486 001a 7047     	 bx lr
 487              	 .cfi_endproc
 488              	.LFE166:
 490              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 491              	 .align 2
 492              	 .global XMC_LEDTS_SetActivePADNo
 493              	 .thumb
 494              	 .thumb_func
 496              	XMC_LEDTS_SetActivePADNo:
 497              	.LFB167:
 244:../Libraries/XMCLib/src/xmc_ledts.c **** 
 245:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 246:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 247:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 248:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 249:../Libraries/XMCLib/src/xmc_ledts.c **** {
 498              	 .loc 1 249 0
 499              	 .cfi_startproc
 500              	 
 501              	 
 502              	 
 503 0000 80B4     	 push {r7}
 504              	.LCFI41:
 505              	 .cfi_def_cfa_offset 4
 506              	 .cfi_offset 7,-4
 507 0002 85B0     	 sub sp,sp,#20
 508              	.LCFI42:
 509              	 .cfi_def_cfa_offset 24
 510 0004 00AF     	 add r7,sp,#0
 511              	.LCFI43:
 512              	 .cfi_def_cfa_register 7
 513 0006 7860     	 str r0,[r7,#4]
 514 0008 0B46     	 mov r3,r1
 515 000a FB70     	 strb r3,[r7,#3]
 250:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 251:../Libraries/XMCLib/src/xmc_ledts.c **** 
 252:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 253:../Libraries/XMCLib/src/xmc_ledts.c **** 
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 516              	 .loc 1 254 0
 517 000c 7B68     	 ldr r3,[r7,#4]
 518 000e 9B68     	 ldr r3,[r3,#8]
 519 0010 FB60     	 str r3,[r7,#12]
 255:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 520              	 .loc 1 255 0
 521 0012 FB68     	 ldr r3,[r7,#12]
 522 0014 23F00703 	 bic r3,r3,#7
 523 0018 FB60     	 str r3,[r7,#12]
 256:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 524              	 .loc 1 256 0
 525 001a FB78     	 ldrb r3,[r7,#3]
 526 001c FA68     	 ldr r2,[r7,#12]
 527 001e 1343     	 orrs r3,r3,r2
 528 0020 FB60     	 str r3,[r7,#12]
 257:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 529              	 .loc 1 257 0
 530 0022 7B68     	 ldr r3,[r7,#4]
 531 0024 FA68     	 ldr r2,[r7,#12]
 532 0026 9A60     	 str r2,[r3,#8]
 258:../Libraries/XMCLib/src/xmc_ledts.c **** }
 533              	 .loc 1 258 0
 534 0028 1437     	 adds r7,r7,#20
 535              	.LCFI44:
 536              	 .cfi_def_cfa_offset 4
 537 002a BD46     	 mov sp,r7
 538              	.LCFI45:
 539              	 .cfi_def_cfa_register 13
 540              	 
 541 002c 5DF8047B 	 ldr r7,[sp],#4
 542              	.LCFI46:
 543              	 .cfi_restore 7
 544              	 .cfi_def_cfa_offset 0
 545 0030 7047     	 bx lr
 546              	 .cfi_endproc
 547              	.LFE167:
 549 0032 00BF     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 550              	 .align 2
 551              	 .global XMC_LEDTS_ClearInterruptFlag
 552              	 .thumb
 553              	 .thumb_func
 555              	XMC_LEDTS_ClearInterruptFlag:
 556              	.LFB168:
 259:../Libraries/XMCLib/src/xmc_ledts.c **** 
 260:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 261:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 262:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 263:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 264:../Libraries/XMCLib/src/xmc_ledts.c **** {
 557              	 .loc 1 264 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561              	 
 562 0000 80B4     	 push {r7}
 563              	.LCFI47:
 564              	 .cfi_def_cfa_offset 4
 565              	 .cfi_offset 7,-4
 566 0002 83B0     	 sub sp,sp,#12
 567              	.LCFI48:
 568              	 .cfi_def_cfa_offset 16
 569 0004 00AF     	 add r7,sp,#0
 570              	.LCFI49:
 571              	 .cfi_def_cfa_register 7
 572 0006 7860     	 str r0,[r7,#4]
 573 0008 3960     	 str r1,[r7]
 265:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 266:../Libraries/XMCLib/src/xmc_ledts.c **** 
 267:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 574              	 .loc 1 267 0
 575 000a 3B68     	 ldr r3,[r7]
 576 000c 1A04     	 lsls r2,r3,#16
 577 000e 7B68     	 ldr r3,[r7,#4]
 578 0010 DA60     	 str r2,[r3,#12]
 268:../Libraries/XMCLib/src/xmc_ledts.c **** }
 579              	 .loc 1 268 0
 580 0012 0C37     	 adds r7,r7,#12
 581              	.LCFI50:
 582              	 .cfi_def_cfa_offset 4
 583 0014 BD46     	 mov sp,r7
 584              	.LCFI51:
 585              	 .cfi_def_cfa_register 13
 586              	 
 587 0016 5DF8047B 	 ldr r7,[sp],#4
 588              	.LCFI52:
 589              	 .cfi_restore 7
 590              	 .cfi_def_cfa_offset 0
 591 001a 7047     	 bx lr
 592              	 .cfi_endproc
 593              	.LFE168:
 595              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 596              	 .align 2
 597              	 .global XMC_LEDTS_SetLEDLinePattern
 598              	 .thumb
 599              	 .thumb_func
 601              	XMC_LEDTS_SetLEDLinePattern:
 602              	.LFB169:
 269:../Libraries/XMCLib/src/xmc_ledts.c **** 
 270:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 271:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 272:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 273:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 274:../Libraries/XMCLib/src/xmc_ledts.c **** {
 603              	 .loc 1 274 0
 604              	 .cfi_startproc
 605              	 
 606              	 
 607              	 
 608 0000 80B4     	 push {r7}
 609              	.LCFI53:
 610              	 .cfi_def_cfa_offset 4
 611              	 .cfi_offset 7,-4
 612 0002 85B0     	 sub sp,sp,#20
 613              	.LCFI54:
 614              	 .cfi_def_cfa_offset 24
 615 0004 00AF     	 add r7,sp,#0
 616              	.LCFI55:
 617              	 .cfi_def_cfa_register 7
 618 0006 7860     	 str r0,[r7,#4]
 619 0008 0B46     	 mov r3,r1
 620 000a FB70     	 strb r3,[r7,#3]
 621 000c 1346     	 mov r3,r2
 622 000e BB70     	 strb r3,[r7,#2]
 275:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 276:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 623              	 .loc 1 276 0
 624 0010 FB78     	 ldrb r3,[r7,#3]
 625 0012 9B08     	 lsrs r3,r3,#2
 626 0014 FB73     	 strb r3,[r7,#15]
 277:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 627              	 .loc 1 277 0
 628 0016 FB78     	 ldrb r3,[r7,#3]
 629 0018 03F00303 	 and r3,r3,#3
 630 001c DBB2     	 uxtb r3,r3
 631 001e DB00     	 lsls r3,r3,#3
 632 0020 BB73     	 strb r3,[r7,#14]
 278:../Libraries/XMCLib/src/xmc_ledts.c **** 
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 280:../Libraries/XMCLib/src/xmc_ledts.c **** 
 281:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 633              	 .loc 1 281 0
 634 0022 FB7B     	 ldrb r3,[r7,#15]
 635 0024 7A68     	 ldr r2,[r7,#4]
 636 0026 0433     	 adds r3,r3,#4
 637 0028 9B00     	 lsls r3,r3,#2
 638 002a 1344     	 add r3,r3,r2
 639 002c 5B68     	 ldr r3,[r3,#4]
 640 002e BB60     	 str r3,[r7,#8]
 282:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 641              	 .loc 1 282 0
 642 0030 BB7B     	 ldrb r3,[r7,#14]
 643 0032 FF22     	 movs r2,#255
 644 0034 02FA03F3 	 lsl r3,r2,r3
 645 0038 DB43     	 mvns r3,r3
 646 003a 1A46     	 mov r2,r3
 647 003c BB68     	 ldr r3,[r7,#8]
 648 003e 1340     	 ands r3,r3,r2
 649 0040 BB60     	 str r3,[r7,#8]
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 650              	 .loc 1 283 0
 651 0042 BA78     	 ldrb r2,[r7,#2]
 652 0044 BB7B     	 ldrb r3,[r7,#14]
 653 0046 02FA03F3 	 lsl r3,r2,r3
 654 004a 1A46     	 mov r2,r3
 655 004c BB68     	 ldr r3,[r7,#8]
 656 004e 1343     	 orrs r3,r3,r2
 657 0050 BB60     	 str r3,[r7,#8]
 284:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 658              	 .loc 1 284 0
 659 0052 FB7B     	 ldrb r3,[r7,#15]
 660 0054 7A68     	 ldr r2,[r7,#4]
 661 0056 0433     	 adds r3,r3,#4
 662 0058 9B00     	 lsls r3,r3,#2
 663 005a 1344     	 add r3,r3,r2
 664 005c BA68     	 ldr r2,[r7,#8]
 665 005e 5A60     	 str r2,[r3,#4]
 285:../Libraries/XMCLib/src/xmc_ledts.c **** 
 286:../Libraries/XMCLib/src/xmc_ledts.c **** }
 666              	 .loc 1 286 0
 667 0060 1437     	 adds r7,r7,#20
 668              	.LCFI56:
 669              	 .cfi_def_cfa_offset 4
 670 0062 BD46     	 mov sp,r7
 671              	.LCFI57:
 672              	 .cfi_def_cfa_register 13
 673              	 
 674 0064 5DF8047B 	 ldr r7,[sp],#4
 675              	.LCFI58:
 676              	 .cfi_restore 7
 677              	 .cfi_def_cfa_offset 0
 678 0068 7047     	 bx lr
 679              	 .cfi_endproc
 680              	.LFE169:
 682 006a 00BF     	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 683              	 .align 2
 684              	 .global XMC_LEDTS_SetColumnBrightness
 685              	 .thumb
 686              	 .thumb_func
 688              	XMC_LEDTS_SetColumnBrightness:
 689              	.LFB170:
 287:../Libraries/XMCLib/src/xmc_ledts.c **** 
 288:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 289:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 290:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 291:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 292:../Libraries/XMCLib/src/xmc_ledts.c **** {
 690              	 .loc 1 292 0
 691              	 .cfi_startproc
 692              	 
 693              	 
 694              	 
 695 0000 80B4     	 push {r7}
 696              	.LCFI59:
 697              	 .cfi_def_cfa_offset 4
 698              	 .cfi_offset 7,-4
 699 0002 85B0     	 sub sp,sp,#20
 700              	.LCFI60:
 701              	 .cfi_def_cfa_offset 24
 702 0004 00AF     	 add r7,sp,#0
 703              	.LCFI61:
 704              	 .cfi_def_cfa_register 7
 705 0006 7860     	 str r0,[r7,#4]
 706 0008 0B46     	 mov r3,r1
 707 000a FB70     	 strb r3,[r7,#3]
 708 000c 1346     	 mov r3,r2
 709 000e BB70     	 strb r3,[r7,#2]
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 710              	 .loc 1 294 0
 711 0010 FB78     	 ldrb r3,[r7,#3]
 712 0012 9B08     	 lsrs r3,r3,#2
 713 0014 FB73     	 strb r3,[r7,#15]
 295:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 714              	 .loc 1 295 0
 715 0016 FB78     	 ldrb r3,[r7,#3]
 716 0018 03F00303 	 and r3,r3,#3
 717 001c DBB2     	 uxtb r3,r3
 718 001e DB00     	 lsls r3,r3,#3
 719 0020 BB73     	 strb r3,[r7,#14]
 296:../Libraries/XMCLib/src/xmc_ledts.c **** 
 297:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 298:../Libraries/XMCLib/src/xmc_ledts.c **** 
 299:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 720              	 .loc 1 299 0
 721 0022 FB7B     	 ldrb r3,[r7,#15]
 722 0024 7A68     	 ldr r2,[r7,#4]
 723 0026 0633     	 adds r3,r3,#6
 724 0028 9B00     	 lsls r3,r3,#2
 725 002a 1344     	 add r3,r3,r2
 726 002c 5B68     	 ldr r3,[r3,#4]
 727 002e BB60     	 str r3,[r7,#8]
 300:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 728              	 .loc 1 300 0
 729 0030 BB7B     	 ldrb r3,[r7,#14]
 730 0032 FF22     	 movs r2,#255
 731 0034 02FA03F3 	 lsl r3,r2,r3
 732 0038 DB43     	 mvns r3,r3
 733 003a 1A46     	 mov r2,r3
 734 003c BB68     	 ldr r3,[r7,#8]
 735 003e 1340     	 ands r3,r3,r2
 736 0040 BB60     	 str r3,[r7,#8]
 301:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 737              	 .loc 1 301 0
 738 0042 BA78     	 ldrb r2,[r7,#2]
 739 0044 BB7B     	 ldrb r3,[r7,#14]
 740 0046 02FA03F3 	 lsl r3,r2,r3
 741 004a 1A46     	 mov r2,r3
 742 004c BB68     	 ldr r3,[r7,#8]
 743 004e 1343     	 orrs r3,r3,r2
 744 0050 BB60     	 str r3,[r7,#8]
 302:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 745              	 .loc 1 302 0
 746 0052 FB7B     	 ldrb r3,[r7,#15]
 747 0054 7A68     	 ldr r2,[r7,#4]
 748 0056 0633     	 adds r3,r3,#6
 749 0058 9B00     	 lsls r3,r3,#2
 750 005a 1344     	 add r3,r3,r2
 751 005c BA68     	 ldr r2,[r7,#8]
 752 005e 5A60     	 str r2,[r3,#4]
 303:../Libraries/XMCLib/src/xmc_ledts.c **** }
 753              	 .loc 1 303 0
 754 0060 1437     	 adds r7,r7,#20
 755              	.LCFI62:
 756              	 .cfi_def_cfa_offset 4
 757 0062 BD46     	 mov sp,r7
 758              	.LCFI63:
 759              	 .cfi_def_cfa_register 13
 760              	 
 761 0064 5DF8047B 	 ldr r7,[sp],#4
 762              	.LCFI64:
 763              	 .cfi_restore 7
 764              	 .cfi_def_cfa_offset 0
 765 0068 7047     	 bx lr
 766              	 .cfi_endproc
 767              	.LFE170:
 769 006a 00BF     	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 770              	 .align 2
 771              	 .global XMC_LEDTS_SetCommonOscillationWindow
 772              	 .thumb
 773              	 .thumb_func
 775              	XMC_LEDTS_SetCommonOscillationWindow:
 776              	.LFB171:
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 
 305:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 306:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 307:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 308:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 309:../Libraries/XMCLib/src/xmc_ledts.c **** {
 777              	 .loc 1 309 0
 778              	 .cfi_startproc
 779              	 
 780              	 
 781              	 
 782 0000 80B4     	 push {r7}
 783              	.LCFI65:
 784              	 .cfi_def_cfa_offset 4
 785              	 .cfi_offset 7,-4
 786 0002 85B0     	 sub sp,sp,#20
 787              	.LCFI66:
 788              	 .cfi_def_cfa_offset 24
 789 0004 00AF     	 add r7,sp,#0
 790              	.LCFI67:
 791              	 .cfi_def_cfa_register 7
 792 0006 7860     	 str r0,[r7,#4]
 793 0008 0B46     	 mov r3,r1
 794 000a FB70     	 strb r3,[r7,#3]
 310:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 311:../Libraries/XMCLib/src/xmc_ledts.c **** 
 312:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 313:../Libraries/XMCLib/src/xmc_ledts.c **** 
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 795              	 .loc 1 314 0
 796 000c 7B68     	 ldr r3,[r7,#4]
 797 000e 1B6A     	 ldr r3,[r3,#32]
 798 0010 FB60     	 str r3,[r7,#12]
 315:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 799              	 .loc 1 315 0
 800 0012 FB68     	 ldr r3,[r7,#12]
 801 0014 23F07F43 	 bic r3,r3,#-16777216
 802 0018 FB60     	 str r3,[r7,#12]
 316:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 803              	 .loc 1 316 0
 804 001a FB78     	 ldrb r3,[r7,#3]
 805 001c 1B06     	 lsls r3,r3,#24
 806 001e 1A46     	 mov r2,r3
 807 0020 FB68     	 ldr r3,[r7,#12]
 808 0022 1343     	 orrs r3,r3,r2
 809 0024 FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 810              	 .loc 1 317 0
 811 0026 7B68     	 ldr r3,[r7,#4]
 812 0028 FA68     	 ldr r2,[r7,#12]
 813 002a 1A62     	 str r2,[r3,#32]
 318:../Libraries/XMCLib/src/xmc_ledts.c **** }
 814              	 .loc 1 318 0
 815 002c 1437     	 adds r7,r7,#20
 816              	.LCFI68:
 817              	 .cfi_def_cfa_offset 4
 818 002e BD46     	 mov sp,r7
 819              	.LCFI69:
 820              	 .cfi_def_cfa_register 13
 821              	 
 822 0030 5DF8047B 	 ldr r7,[sp],#4
 823              	.LCFI70:
 824              	 .cfi_restore 7
 825              	 .cfi_def_cfa_offset 0
 826 0034 7047     	 bx lr
 827              	 .cfi_endproc
 828              	.LFE171:
 830 0036 00BF     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 831              	 .align 2
 832              	 .global XMC_LEDTS_ReadFNCOL
 833              	 .thumb
 834              	 .thumb_func
 836              	XMC_LEDTS_ReadFNCOL:
 837              	.LFB172:
 319:../Libraries/XMCLib/src/xmc_ledts.c **** 
 320:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 321:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 322:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 323:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 324:../Libraries/XMCLib/src/xmc_ledts.c **** {
 838              	 .loc 1 324 0
 839              	 .cfi_startproc
 840              	 
 841              	 
 842              	 
 843 0000 80B4     	 push {r7}
 844              	.LCFI71:
 845              	 .cfi_def_cfa_offset 4
 846              	 .cfi_offset 7,-4
 847 0002 85B0     	 sub sp,sp,#20
 848              	.LCFI72:
 849              	 .cfi_def_cfa_offset 24
 850 0004 00AF     	 add r7,sp,#0
 851              	.LCFI73:
 852              	 .cfi_def_cfa_register 7
 853 0006 7860     	 str r0,[r7,#4]
 325:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 326:../Libraries/XMCLib/src/xmc_ledts.c **** 
 327:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 328:../Libraries/XMCLib/src/xmc_ledts.c **** 
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 854              	 .loc 1 329 0
 855 0008 7B68     	 ldr r3,[r7,#4]
 856 000a 9B68     	 ldr r3,[r3,#8]
 857 000c 03F0E003 	 and r3,r3,#224
 858 0010 FB60     	 str r3,[r7,#12]
 330:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 859              	 .loc 1 330 0
 860 0012 FB68     	 ldr r3,[r7,#12]
 861 0014 5B09     	 lsrs r3,r3,#5
 862 0016 FB60     	 str r3,[r7,#12]
 331:../Libraries/XMCLib/src/xmc_ledts.c **** 
 332:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 863              	 .loc 1 332 0
 864 0018 FB68     	 ldr r3,[r7,#12]
 333:../Libraries/XMCLib/src/xmc_ledts.c **** }
 865              	 .loc 1 333 0
 866 001a 1846     	 mov r0,r3
 867 001c 1437     	 adds r7,r7,#20
 868              	.LCFI74:
 869              	 .cfi_def_cfa_offset 4
 870 001e BD46     	 mov sp,r7
 871              	.LCFI75:
 872              	 .cfi_def_cfa_register 13
 873              	 
 874 0020 5DF8047B 	 ldr r7,[sp],#4
 875              	.LCFI76:
 876              	 .cfi_restore 7
 877              	 .cfi_def_cfa_offset 0
 878 0024 7047     	 bx lr
 879              	 .cfi_endproc
 880              	.LFE172:
 882 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 883              	 .align 2
 884              	 .global XMC_LEDTS_SetNumOfLEDColumns
 885              	 .thumb
 886              	 .thumb_func
 888              	XMC_LEDTS_SetNumOfLEDColumns:
 889              	.LFB173:
 334:../Libraries/XMCLib/src/xmc_ledts.c **** 
 335:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 336:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 337:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 338:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 339:../Libraries/XMCLib/src/xmc_ledts.c **** {
 890              	 .loc 1 339 0
 891              	 .cfi_startproc
 892              	 
 893              	 
 894              	 
 895 0000 80B4     	 push {r7}
 896              	.LCFI77:
 897              	 .cfi_def_cfa_offset 4
 898              	 .cfi_offset 7,-4
 899 0002 83B0     	 sub sp,sp,#12
 900              	.LCFI78:
 901              	 .cfi_def_cfa_offset 16
 902 0004 00AF     	 add r7,sp,#0
 903              	.LCFI79:
 904              	 .cfi_def_cfa_register 7
 905 0006 7860     	 str r0,[r7,#4]
 906 0008 0B46     	 mov r3,r1
 907 000a FB70     	 strb r3,[r7,#3]
 340:../Libraries/XMCLib/src/xmc_ledts.c **** 
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 342:../Libraries/XMCLib/src/xmc_ledts.c **** 
 343:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 908              	 .loc 1 343 0
 909 000c 7B68     	 ldr r3,[r7,#4]
 910 000e 9B68     	 ldr r3,[r3,#8]
 911 0010 23F06042 	 bic r2,r3,#-536870912
 912 0014 7B68     	 ldr r3,[r7,#4]
 913 0016 9A60     	 str r2,[r3,#8]
 344:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 914              	 .loc 1 344 0
 915 0018 7B68     	 ldr r3,[r7,#4]
 916 001a 9B68     	 ldr r3,[r3,#8]
 917 001c FA78     	 ldrb r2,[r7,#3]
 918 001e 5207     	 lsls r2,r2,#29
 919 0020 1A43     	 orrs r2,r2,r3
 920 0022 7B68     	 ldr r3,[r7,#4]
 921 0024 9A60     	 str r2,[r3,#8]
 345:../Libraries/XMCLib/src/xmc_ledts.c **** }
 922              	 .loc 1 345 0
 923 0026 0C37     	 adds r7,r7,#12
 924              	.LCFI80:
 925              	 .cfi_def_cfa_offset 4
 926 0028 BD46     	 mov sp,r7
 927              	.LCFI81:
 928              	 .cfi_def_cfa_register 13
 929              	 
 930 002a 5DF8047B 	 ldr r7,[sp],#4
 931              	.LCFI82:
 932              	 .cfi_restore 7
 933              	 .cfi_def_cfa_offset 0
 934 002e 7047     	 bx lr
 935              	 .cfi_endproc
 936              	.LFE173:
 938              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 939              	 .align 2
 940              	 .global XMC_LEDTS_ReadTSVAL
 941              	 .thumb
 942              	 .thumb_func
 944              	XMC_LEDTS_ReadTSVAL:
 945              	.LFB174:
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 349:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 350:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 351:../Libraries/XMCLib/src/xmc_ledts.c **** {
 946              	 .loc 1 351 0
 947              	 .cfi_startproc
 948              	 
 949              	 
 950              	 
 951 0000 80B4     	 push {r7}
 952              	.LCFI83:
 953              	 .cfi_def_cfa_offset 4
 954              	 .cfi_offset 7,-4
 955 0002 85B0     	 sub sp,sp,#20
 956              	.LCFI84:
 957              	 .cfi_def_cfa_offset 24
 958 0004 00AF     	 add r7,sp,#0
 959              	.LCFI85:
 960              	 .cfi_def_cfa_register 7
 961 0006 7860     	 str r0,[r7,#4]
 352:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 353:../Libraries/XMCLib/src/xmc_ledts.c **** 
 354:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 355:../Libraries/XMCLib/src/xmc_ledts.c **** 
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 962              	 .loc 1 356 0
 963 0008 7B68     	 ldr r3,[r7,#4]
 964 000a 1B69     	 ldr r3,[r3,#16]
 965 000c FB81     	 strh r3,[r7,#14]
 357:../Libraries/XMCLib/src/xmc_ledts.c **** 
 358:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 966              	 .loc 1 358 0
 967 000e FB89     	 ldrh r3,[r7,#14]
 359:../Libraries/XMCLib/src/xmc_ledts.c **** }
 968              	 .loc 1 359 0
 969 0010 1846     	 mov r0,r3
 970 0012 1437     	 adds r7,r7,#20
 971              	.LCFI86:
 972              	 .cfi_def_cfa_offset 4
 973 0014 BD46     	 mov sp,r7
 974              	.LCFI87:
 975              	 .cfi_def_cfa_register 13
 976              	 
 977 0016 5DF8047B 	 ldr r7,[sp],#4
 978              	.LCFI88:
 979              	 .cfi_restore 7
 980              	 .cfi_def_cfa_offset 0
 981 001a 7047     	 bx lr
 982              	 .cfi_endproc
 983              	.LFE174:
 985              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 986              	 .align 2
 987              	 .global XMC_LEDTS_SetOscillationWindow
 988              	 .thumb
 989              	 .thumb_func
 991              	XMC_LEDTS_SetOscillationWindow:
 992              	.LFB175:
 360:../Libraries/XMCLib/src/xmc_ledts.c **** 
 361:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 362:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 363:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 364:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 365:../Libraries/XMCLib/src/xmc_ledts.c **** {
 993              	 .loc 1 365 0
 994              	 .cfi_startproc
 995              	 
 996              	 
 997              	 
 998 0000 80B4     	 push {r7}
 999              	.LCFI89:
 1000              	 .cfi_def_cfa_offset 4
 1001              	 .cfi_offset 7,-4
 1002 0002 85B0     	 sub sp,sp,#20
 1003              	.LCFI90:
 1004              	 .cfi_def_cfa_offset 24
 1005 0004 00AF     	 add r7,sp,#0
 1006              	.LCFI91:
 1007              	 .cfi_def_cfa_register 7
 1008 0006 7860     	 str r0,[r7,#4]
 1009 0008 0B46     	 mov r3,r1
 1010 000a FB70     	 strb r3,[r7,#3]
 1011 000c 1346     	 mov r3,r2
 1012 000e BB70     	 strb r3,[r7,#2]
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 367:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1013              	 .loc 1 367 0
 1014 0010 FB78     	 ldrb r3,[r7,#3]
 1015 0012 9B08     	 lsrs r3,r3,#2
 1016 0014 FB73     	 strb r3,[r7,#15]
 368:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1017              	 .loc 1 368 0
 1018 0016 FB78     	 ldrb r3,[r7,#3]
 1019 0018 03F00303 	 and r3,r3,#3
 1020 001c DBB2     	 uxtb r3,r3
 1021 001e DB00     	 lsls r3,r3,#3
 1022 0020 BB73     	 strb r3,[r7,#14]
 369:../Libraries/XMCLib/src/xmc_ledts.c **** 
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 371:../Libraries/XMCLib/src/xmc_ledts.c **** 
 372:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 1023              	 .loc 1 372 0
 1024 0022 FB7B     	 ldrb r3,[r7,#15]
 1025 0024 7A68     	 ldr r2,[r7,#4]
 1026 0026 0833     	 adds r3,r3,#8
 1027 0028 9B00     	 lsls r3,r3,#2
 1028 002a 1344     	 add r3,r3,r2
 1029 002c 5B68     	 ldr r3,[r3,#4]
 1030 002e BB60     	 str r3,[r7,#8]
 373:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 1031              	 .loc 1 373 0
 1032 0030 BB7B     	 ldrb r3,[r7,#14]
 1033 0032 FF22     	 movs r2,#255
 1034 0034 02FA03F3 	 lsl r3,r2,r3
 1035 0038 DB43     	 mvns r3,r3
 1036 003a 1A46     	 mov r2,r3
 1037 003c BB68     	 ldr r3,[r7,#8]
 1038 003e 1340     	 ands r3,r3,r2
 1039 0040 BB60     	 str r3,[r7,#8]
 374:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 1040              	 .loc 1 374 0
 1041 0042 BA78     	 ldrb r2,[r7,#2]
 1042 0044 BB7B     	 ldrb r3,[r7,#14]
 1043 0046 02FA03F3 	 lsl r3,r2,r3
 1044 004a 1A46     	 mov r2,r3
 1045 004c BB68     	 ldr r3,[r7,#8]
 1046 004e 1343     	 orrs r3,r3,r2
 1047 0050 BB60     	 str r3,[r7,#8]
 375:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 1048              	 .loc 1 375 0
 1049 0052 FB7B     	 ldrb r3,[r7,#15]
 1050 0054 7A68     	 ldr r2,[r7,#4]
 1051 0056 0833     	 adds r3,r3,#8
 1052 0058 9B00     	 lsls r3,r3,#2
 1053 005a 1344     	 add r3,r3,r2
 1054 005c BA68     	 ldr r2,[r7,#8]
 1055 005e 5A60     	 str r2,[r3,#4]
 376:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1056              	 .loc 1 376 0
 1057 0060 1437     	 adds r7,r7,#20
 1058              	.LCFI92:
 1059              	 .cfi_def_cfa_offset 4
 1060 0062 BD46     	 mov sp,r7
 1061              	.LCFI93:
 1062              	 .cfi_def_cfa_register 13
 1063              	 
 1064 0064 5DF8047B 	 ldr r7,[sp],#4
 1065              	.LCFI94:
 1066              	 .cfi_restore 7
 1067              	 .cfi_def_cfa_offset 0
 1068 0068 7047     	 bx lr
 1069              	 .cfi_endproc
 1070              	.LFE175:
 1072 006a 00BF     	 .text
 1073              	.Letext0:
 1074              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1075              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1076              	 .file 4 "D:\\Bachelorarbeit\\Dave\\Basisstation\\hghg/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1077              	 .file 5 "D:\\Bachelorarbeit\\Dave\\Basisstation\\hghg\\Libraries\\XMCLib\\inc/xmc_ledts.h"
 1078              	 .file 6 "D:\\Bachelorarbeit\\Dave\\Basisstation\\hghg\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 1079              	 .file 7 "D:\\Bachelorarbeit\\Dave\\Basisstation\\hghg/Libraries/CMSIS/Include/core_cm4.h"
 1080              	 .file 8 "D:\\Bachelorarbeit\\Dave\\Basisstation\\hghg/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:88     .text.XMC_LEDTS_InitGlobal:0000003c $d
    {standard input}:94     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:99     .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:170    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:175    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:249    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:254    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:259    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:345    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:350    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:355    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:400    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:405    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:446    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:451    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:491    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:496    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:550    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:555    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:596    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:601    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:683    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:688    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:770    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:775    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:831    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:836    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:883    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:888    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:939    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:944    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:986    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:991    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
