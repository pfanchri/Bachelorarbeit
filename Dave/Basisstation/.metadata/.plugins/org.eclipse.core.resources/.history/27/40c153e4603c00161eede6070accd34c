   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_common.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_PRIOARRAY_GetHead,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_PRIOARRAY_GetHead:
  25              	.LFB123:
  26              	 .file 1 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation\\Libraries\\XMCLib\\inc/xmc_common.h"
   1:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**
   2:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @file xmc_common.h
   3:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @date 2016-02-26
   4:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
   5:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @cond
   6:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   *************************************************************************************************
   7:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
   9:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * All rights reserved.                        
  11:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *                                             
  12:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * following conditions are met:   
  14:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *                                                                              
  15:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * disclaimer.                        
  17:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * 
  18:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * 
  21:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * products derived from this software without specific prior written permission.                  
  23:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *                                                                              
  24:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *                                                                              
  32:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  **************************************************************************************************
  35:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
  36:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * Change History
  37:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * --------------
  38:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
  39:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * 2015-06-20:
  40:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *     - Initial
  41:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *     - Brief section updated
  42:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *     - Added XMC_LIB_VERSION macro
  43:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
  44:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * 2016-02-26:
  45:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *     - Updated XMC_LIB_VERSION macro to v2.1.6
  46:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *      
  47:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @endcond 
  48:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
  49:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
  50:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  51:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #ifndef XMC_COMMON_H
  52:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_COMMON_H
  53:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  54:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #include <stddef.h>
  55:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #include <stdint.h>
  56:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #include <stdbool.h>
  57:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #include <string.h>
  58:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  59:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #include "xmc_device.h"
  60:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  61:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**
  62:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @addtogroup XMClib XMC Peripheral Library
  63:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @{
  64:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
  65:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  66:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**
  67:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @addtogroup COMMON
  68:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @brief Common APIs to all peripherals for XMC microcontroller family 
  69:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * @{
  70:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
  71:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  72:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**************************************************************************************************
  73:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * MACROS
  74:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  **************************************************************************************************
  75:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_LIB_MAJOR_VERSION	(2U)
  76:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_LIB_MINOR_VERSION	(1U)
  77:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_LIB_PATCH_VERSION	(6U)
  78:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  
  79:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_LIB_VERSION         ((XMC_LIB_MAJOR_VERSION << 16U) + (XMC_LIB_MINOR_VERSION << 8U) + X
  80:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  81:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /* Define WEAK attribute */
  82:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #if !defined(__WEAK)
  83:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #if defined ( __CC_ARM )
  84:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
  85:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #elif defined ( __ICCARM__ )
  86:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define __WEAK __weak
  87:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #elif defined ( __GNUC__ )
  88:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
  89:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #elif defined ( __TASKING__ )
  90:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define __WEAK __attribute__ ((weak))
  91:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #endif
  92:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #endif
  93:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
  94:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #ifdef XMC_ASSERT_ENABLE
  95:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { if(!(exp)) {XMC_AssertHandler(msg, __FILE__, __LINE__);} }
  96:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #else
  97:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  #define XMC_ASSERT(msg, exp) { ; }
  98:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #endif
  99:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 100:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #ifdef XMC_DEBUG_ENABLE
 101:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  #include <stdio.h>
 102:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  #define XMC_DEBUG(...) { printf(__VA_ARGS__); }
 103:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #else
 104:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  #define XMC_DEBUG(...) { ; }
 105:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #endif
 106:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 107:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_UNUSED_ARG(x) (void)x
 108:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 109:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_STRUCT_INIT(m) memset(&m, 0, sizeof(m))
 110:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 111:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_PRIOARRAY_DEF(name, size) \
 112:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** XMC_PRIOARRAY_ITEM_t prioarray_m_##name[size + 2]; \
 113:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** XMC_PRIOARRAY_t prioarray_def_##name = {(size), (prioarray_m_##name)};
 114:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 115:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #define XMC_PRIOARRAY(name) \
 116:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** &prioarray_def_##name
 117:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 118:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**************************************************************************************************
 119:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * DATA STRUCTURES
 120:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  **************************************************************************************************
 121:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 122:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 123:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 124:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** typedef struct XMC_DRIVER_VERSION 
 125:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
 126:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   uint8_t major;
 127:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   uint8_t minor;
 128:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   uint8_t patch;
 129:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** } XMC_DRIVER_VERSION_t;
 130:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 131:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 132:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 133:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 134:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** typedef void *XMC_LIST_t;
 135:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 136:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 137:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 138:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 139:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** typedef struct XMC_PRIOARRAY_ITEM
 140:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
 141:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   int32_t priority;
 142:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   int32_t previous;
 143:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   int32_t next;
 144:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** } XMC_PRIOARRAY_ITEM_t;
 145:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 146:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 147:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 148:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 149:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** typedef struct XMC_PRIOARRAY
 150:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
 151:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   uint32_t size;
 152:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   XMC_PRIOARRAY_ITEM_t *items;
 153:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** } XMC_PRIOARRAY_t;
 154:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 155:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /**************************************************************************************************
 156:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  * API PROTOTYPES
 157:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  **************************************************************************************************
 158:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 159:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #ifdef __cplusplus
 160:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** extern "C" {
 161:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** #endif
 162:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 163:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 164:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 165:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 166:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line);
 167:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 168:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 169:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 170:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 171:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_LIST_Init(XMC_LIST_t *list);
 172:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 173:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 174:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 175:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 176:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_LIST_Add(XMC_LIST_t *list, void *const item);
 177:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 178:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 179:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 180:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 181:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_LIST_Remove(XMC_LIST_t *list, void *const item);
 182:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 183:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 184:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 185:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 186:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** uint32_t XMC_LIST_GetLength(XMC_LIST_t *list);
 187:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 188:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 189:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 190:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 191:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void *XMC_LIST_GetHead(XMC_LIST_t *list);
 192:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 193:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 194:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 195:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 196:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void *XMC_LIST_GetTail(XMC_LIST_t *list);
 197:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 198:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 199:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 200:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 201:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item);
 202:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 203:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 204:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 205:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 206:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray);
 207:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 208:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 209:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 210:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 211:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority);
 212:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 213:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 214:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 215:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 216:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item);
 217:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 218:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 219:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 220:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 221:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetHead(XMC_PRIOARRAY_t *prioarray)
 222:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
  27              	 .loc 1 222 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 223:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 224:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   return prioarray->items[prioarray->size].next;
  43              	 .loc 1 224 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 5968     	 ldr r1,[r3,#4]
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e 1A68     	 ldr r2,[r3]
  48 0010 1346     	 mov r3,r2
  49 0012 5B00     	 lsls r3,r3,#1
  50 0014 1344     	 add r3,r3,r2
  51 0016 9B00     	 lsls r3,r3,#2
  52 0018 0B44     	 add r3,r3,r1
  53 001a 9B68     	 ldr r3,[r3,#8]
 225:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** }
  54              	 .loc 1 225 0
  55 001c 1846     	 mov r0,r3
  56 001e 0C37     	 adds r7,r7,#12
  57              	.LCFI3:
  58              	 .cfi_def_cfa_offset 4
  59 0020 BD46     	 mov sp,r7
  60              	.LCFI4:
  61              	 .cfi_def_cfa_register 13
  62              	 
  63 0022 5DF8047B 	 ldr r7,[sp],#4
  64              	.LCFI5:
  65              	 .cfi_restore 7
  66              	 .cfi_def_cfa_offset 0
  67 0026 7047     	 bx lr
  68              	 .cfi_endproc
  69              	.LFE123:
  71              	 .section .text.XMC_PRIOARRAY_GetItemPriority,"ax",%progbits
  72              	 .align 2
  73              	 .thumb
  74              	 .thumb_func
  76              	XMC_PRIOARRAY_GetItemPriority:
  77              	.LFB125:
 226:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 227:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 228:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 229:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 230:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetTail(XMC_PRIOARRAY_t *prioarray)
 231:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
 232:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 233:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   return prioarray->items[prioarray->size + 1].previous;
 234:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** }
 235:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 236:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 237:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 238:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 239:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemPriority(XMC_PRIOARRAY_t *prioarray, int32_t item)
 240:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
  78              	 .loc 1 240 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 83B0     	 sub sp,sp,#12
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94 0008 3960     	 str r1,[r7]
 241:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemPriority: item out of range", (item >= 0) && (item < prioarray->
 242:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   return prioarray->items[item].priority;
  95              	 .loc 1 242 0
  96 000a 7B68     	 ldr r3,[r7,#4]
  97 000c 5968     	 ldr r1,[r3,#4]
  98 000e 3A68     	 ldr r2,[r7]
  99 0010 1346     	 mov r3,r2
 100 0012 5B00     	 lsls r3,r3,#1
 101 0014 1344     	 add r3,r3,r2
 102 0016 9B00     	 lsls r3,r3,#2
 103 0018 0B44     	 add r3,r3,r1
 104 001a 1B68     	 ldr r3,[r3]
 243:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** }
 105              	 .loc 1 243 0
 106 001c 1846     	 mov r0,r3
 107 001e 0C37     	 adds r7,r7,#12
 108              	.LCFI9:
 109              	 .cfi_def_cfa_offset 4
 110 0020 BD46     	 mov sp,r7
 111              	.LCFI10:
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 0022 5DF8047B 	 ldr r7,[sp],#4
 115              	.LCFI11:
 116              	 .cfi_restore 7
 117              	 .cfi_def_cfa_offset 0
 118 0026 7047     	 bx lr
 119              	 .cfi_endproc
 120              	.LFE125:
 122              	 .section .text.XMC_PRIOARRAY_GetItemNext,"ax",%progbits
 123              	 .align 2
 124              	 .thumb
 125              	 .thumb_func
 127              	XMC_PRIOARRAY_GetItemNext:
 128              	.LFB126:
 244:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** 
 245:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** /*
 246:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  *
 247:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****  */
 248:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** __STATIC_INLINE int32_t XMC_PRIOARRAY_GetItemNext(XMC_PRIOARRAY_t *prioarray, int32_t item)
 249:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** {
 129              	 .loc 1 249 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI12:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI13:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI14:
 143              	 .cfi_def_cfa_register 7
 144 0006 7860     	 str r0,[r7,#4]
 145 0008 3960     	 str r1,[r7]
 250:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   XMC_ASSERT("XMC_PRIOARRAY_GetItemNext: item out of range", (item >= 0) && (item < prioarray->size
 251:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h ****   return prioarray->items[item].next;
 146              	 .loc 1 251 0
 147 000a 7B68     	 ldr r3,[r7,#4]
 148 000c 5968     	 ldr r1,[r3,#4]
 149 000e 3A68     	 ldr r2,[r7]
 150 0010 1346     	 mov r3,r2
 151 0012 5B00     	 lsls r3,r3,#1
 152 0014 1344     	 add r3,r3,r2
 153 0016 9B00     	 lsls r3,r3,#2
 154 0018 0B44     	 add r3,r3,r1
 155 001a 9B68     	 ldr r3,[r3,#8]
 252:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_common.h **** }
 156              	 .loc 1 252 0
 157 001c 1846     	 mov r0,r3
 158 001e 0C37     	 adds r7,r7,#12
 159              	.LCFI15:
 160              	 .cfi_def_cfa_offset 4
 161 0020 BD46     	 mov sp,r7
 162              	.LCFI16:
 163              	 .cfi_def_cfa_register 13
 164              	 
 165 0022 5DF8047B 	 ldr r7,[sp],#4
 166              	.LCFI17:
 167              	 .cfi_restore 7
 168              	 .cfi_def_cfa_offset 0
 169 0026 7047     	 bx lr
 170              	 .cfi_endproc
 171              	.LFE126:
 173              	 .section .text.XMC_LIST_Init,"ax",%progbits
 174              	 .align 2
 175              	 .global XMC_LIST_Init
 176              	 .thumb
 177              	 .thumb_func
 179              	XMC_LIST_Init:
 180              	.LFB128:
 181              	 .file 2 "../Libraries/XMCLib/src/xmc_common.c"
   1:../Libraries/XMCLib/src/xmc_common.c **** /**
   2:../Libraries/XMCLib/src/xmc_common.c ****  * @file xmc_common.c
   3:../Libraries/XMCLib/src/xmc_common.c ****  * @date 2015-02-20
   4:../Libraries/XMCLib/src/xmc_common.c ****  *
   5:../Libraries/XMCLib/src/xmc_common.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_common.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_common.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_common.c ****  *
   9:../Libraries/XMCLib/src/xmc_common.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_common.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_common.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_common.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_common.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_common.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_common.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_common.c ****  * 
  18:../Libraries/XMCLib/src/xmc_common.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_common.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_common.c ****  * 
  21:../Libraries/XMCLib/src/xmc_common.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_common.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_common.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_common.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_common.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_common.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_common.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_common.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_common.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_common.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_common.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_common.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_common.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_common.c ****  *
  36:../Libraries/XMCLib/src/xmc_common.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_common.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_common.c ****  *
  39:../Libraries/XMCLib/src/xmc_common.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_common.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_common.c ****  *      
  42:../Libraries/XMCLib/src/xmc_common.c ****  * @endcond 
  43:../Libraries/XMCLib/src/xmc_common.c ****  *
  44:../Libraries/XMCLib/src/xmc_common.c ****  */
  45:../Libraries/XMCLib/src/xmc_common.c **** 
  46:../Libraries/XMCLib/src/xmc_common.c **** #include "xmc_common.h"
  47:../Libraries/XMCLib/src/xmc_common.c **** 
  48:../Libraries/XMCLib/src/xmc_common.c **** /*******************************************************************************
  49:../Libraries/XMCLib/src/xmc_common.c ****  * DATA STRUCTURES
  50:../Libraries/XMCLib/src/xmc_common.c ****  *******************************************************************************/
  51:../Libraries/XMCLib/src/xmc_common.c **** struct list
  52:../Libraries/XMCLib/src/xmc_common.c **** {
  53:../Libraries/XMCLib/src/xmc_common.c ****   struct list *next;
  54:../Libraries/XMCLib/src/xmc_common.c **** };
  55:../Libraries/XMCLib/src/xmc_common.c **** 
  56:../Libraries/XMCLib/src/xmc_common.c **** /*******************************************************************************
  57:../Libraries/XMCLib/src/xmc_common.c ****  * API IMPLEMENTATION
  58:../Libraries/XMCLib/src/xmc_common.c ****  *******************************************************************************/
  59:../Libraries/XMCLib/src/xmc_common.c **** #if defined(XMC_ASSERT_ENABLE) && !defined(XMC_USER_ASSERT_FUNCTION)
  60:../Libraries/XMCLib/src/xmc_common.c **** 
  61:../Libraries/XMCLib/src/xmc_common.c **** __WEAK void XMC_AssertHandler(const char *const msg, const char *const file, uint32_t line)
  62:../Libraries/XMCLib/src/xmc_common.c **** {
  63:../Libraries/XMCLib/src/xmc_common.c ****   while(1)
  64:../Libraries/XMCLib/src/xmc_common.c ****   {
  65:../Libraries/XMCLib/src/xmc_common.c ****     /* Endless loop */
  66:../Libraries/XMCLib/src/xmc_common.c ****   }
  67:../Libraries/XMCLib/src/xmc_common.c **** }
  68:../Libraries/XMCLib/src/xmc_common.c **** 
  69:../Libraries/XMCLib/src/xmc_common.c **** #endif
  70:../Libraries/XMCLib/src/xmc_common.c **** 
  71:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Init(XMC_LIST_t *list)
  72:../Libraries/XMCLib/src/xmc_common.c **** {
 182              	 .loc 2 72 0
 183              	 .cfi_startproc
 184              	 
 185              	 
 186              	 
 187 0000 80B4     	 push {r7}
 188              	.LCFI18:
 189              	 .cfi_def_cfa_offset 4
 190              	 .cfi_offset 7,-4
 191 0002 83B0     	 sub sp,sp,#12
 192              	.LCFI19:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI20:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
  73:../Libraries/XMCLib/src/xmc_common.c ****   *list = NULL;
 198              	 .loc 2 73 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 0022     	 movs r2,#0
 201 000c 1A60     	 str r2,[r3]
  74:../Libraries/XMCLib/src/xmc_common.c **** }
 202              	 .loc 2 74 0
 203 000e 0C37     	 adds r7,r7,#12
 204              	.LCFI21:
 205              	 .cfi_def_cfa_offset 4
 206 0010 BD46     	 mov sp,r7
 207              	.LCFI22:
 208              	 .cfi_def_cfa_register 13
 209              	 
 210 0012 5DF8047B 	 ldr r7,[sp],#4
 211              	.LCFI23:
 212              	 .cfi_restore 7
 213              	 .cfi_def_cfa_offset 0
 214 0016 7047     	 bx lr
 215              	 .cfi_endproc
 216              	.LFE128:
 218              	 .section .text.XMC_LIST_GetHead,"ax",%progbits
 219              	 .align 2
 220              	 .global XMC_LIST_GetHead
 221              	 .thumb
 222              	 .thumb_func
 224              	XMC_LIST_GetHead:
 225              	.LFB129:
  75:../Libraries/XMCLib/src/xmc_common.c **** 
  76:../Libraries/XMCLib/src/xmc_common.c **** void *XMC_LIST_GetHead(XMC_LIST_t *list)
  77:../Libraries/XMCLib/src/xmc_common.c **** {
 226              	 .loc 2 77 0
 227              	 .cfi_startproc
 228              	 
 229              	 
 230              	 
 231 0000 80B4     	 push {r7}
 232              	.LCFI24:
 233              	 .cfi_def_cfa_offset 4
 234              	 .cfi_offset 7,-4
 235 0002 83B0     	 sub sp,sp,#12
 236              	.LCFI25:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI26:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
  78:../Libraries/XMCLib/src/xmc_common.c ****   return *list;
 242              	 .loc 2 78 0
 243 0008 7B68     	 ldr r3,[r7,#4]
 244 000a 1B68     	 ldr r3,[r3]
  79:../Libraries/XMCLib/src/xmc_common.c **** }
 245              	 .loc 2 79 0
 246 000c 1846     	 mov r0,r3
 247 000e 0C37     	 adds r7,r7,#12
 248              	.LCFI27:
 249              	 .cfi_def_cfa_offset 4
 250 0010 BD46     	 mov sp,r7
 251              	.LCFI28:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 0012 5DF8047B 	 ldr r7,[sp],#4
 255              	.LCFI29:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 0016 7047     	 bx lr
 259              	 .cfi_endproc
 260              	.LFE129:
 262              	 .section .text.XMC_LIST_GetTail,"ax",%progbits
 263              	 .align 2
 264              	 .global XMC_LIST_GetTail
 265              	 .thumb
 266              	 .thumb_func
 268              	XMC_LIST_GetTail:
 269              	.LFB130:
  80:../Libraries/XMCLib/src/xmc_common.c **** 
  81:../Libraries/XMCLib/src/xmc_common.c **** void *XMC_LIST_GetTail(XMC_LIST_t *list)
  82:../Libraries/XMCLib/src/xmc_common.c **** {
 270              	 .loc 2 82 0
 271              	 .cfi_startproc
 272              	 
 273              	 
 274              	 
 275 0000 80B4     	 push {r7}
 276              	.LCFI30:
 277              	 .cfi_def_cfa_offset 4
 278              	 .cfi_offset 7,-4
 279 0002 85B0     	 sub sp,sp,#20
 280              	.LCFI31:
 281              	 .cfi_def_cfa_offset 24
 282 0004 00AF     	 add r7,sp,#0
 283              	.LCFI32:
 284              	 .cfi_def_cfa_register 7
 285 0006 7860     	 str r0,[r7,#4]
  83:../Libraries/XMCLib/src/xmc_common.c ****   struct list *tail;
  84:../Libraries/XMCLib/src/xmc_common.c ****   
  85:../Libraries/XMCLib/src/xmc_common.c ****   if (*list == NULL) 
 286              	 .loc 2 85 0
 287 0008 7B68     	 ldr r3,[r7,#4]
 288 000a 1B68     	 ldr r3,[r3]
 289 000c 002B     	 cmp r3,#0
 290 000e 02D1     	 bne .L11
  86:../Libraries/XMCLib/src/xmc_common.c ****   {
  87:../Libraries/XMCLib/src/xmc_common.c ****     tail = NULL;
 291              	 .loc 2 87 0
 292 0010 0023     	 movs r3,#0
 293 0012 FB60     	 str r3,[r7,#12]
 294 0014 0AE0     	 b .L12
 295              	.L11:
  88:../Libraries/XMCLib/src/xmc_common.c ****   }
  89:../Libraries/XMCLib/src/xmc_common.c ****   else
  90:../Libraries/XMCLib/src/xmc_common.c ****   {
  91:../Libraries/XMCLib/src/xmc_common.c ****     for (tail = (struct list *)*list; tail->next != NULL; tail = tail->next)
 296              	 .loc 2 91 0
 297 0016 7B68     	 ldr r3,[r7,#4]
 298 0018 1B68     	 ldr r3,[r3]
 299 001a FB60     	 str r3,[r7,#12]
 300 001c 02E0     	 b .L13
 301              	.L14:
 302              	 .loc 2 91 0 is_stmt 0 discriminator 3
 303 001e FB68     	 ldr r3,[r7,#12]
 304 0020 1B68     	 ldr r3,[r3]
 305 0022 FB60     	 str r3,[r7,#12]
 306              	.L13:
 307              	 .loc 2 91 0 discriminator 1
 308 0024 FB68     	 ldr r3,[r7,#12]
 309 0026 1B68     	 ldr r3,[r3]
 310 0028 002B     	 cmp r3,#0
 311 002a F8D1     	 bne .L14
 312              	.L12:
  92:../Libraries/XMCLib/src/xmc_common.c ****     {
  93:../Libraries/XMCLib/src/xmc_common.c ****       /* Loop through the list */
  94:../Libraries/XMCLib/src/xmc_common.c ****     }  
  95:../Libraries/XMCLib/src/xmc_common.c ****   }
  96:../Libraries/XMCLib/src/xmc_common.c ****   
  97:../Libraries/XMCLib/src/xmc_common.c ****   return tail;    
 313              	 .loc 2 97 0 is_stmt 1
 314 002c FB68     	 ldr r3,[r7,#12]
  98:../Libraries/XMCLib/src/xmc_common.c **** }
 315              	 .loc 2 98 0
 316 002e 1846     	 mov r0,r3
 317 0030 1437     	 adds r7,r7,#20
 318              	.LCFI33:
 319              	 .cfi_def_cfa_offset 4
 320 0032 BD46     	 mov sp,r7
 321              	.LCFI34:
 322              	 .cfi_def_cfa_register 13
 323              	 
 324 0034 5DF8047B 	 ldr r7,[sp],#4
 325              	.LCFI35:
 326              	 .cfi_restore 7
 327              	 .cfi_def_cfa_offset 0
 328 0038 7047     	 bx lr
 329              	 .cfi_endproc
 330              	.LFE130:
 332 003a 00BF     	 .section .text.XMC_LIST_Add,"ax",%progbits
 333              	 .align 2
 334              	 .global XMC_LIST_Add
 335              	 .thumb
 336              	 .thumb_func
 338              	XMC_LIST_Add:
 339              	.LFB131:
  99:../Libraries/XMCLib/src/xmc_common.c **** 
 100:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Add(XMC_LIST_t *list, void *item)
 101:../Libraries/XMCLib/src/xmc_common.c **** {
 340              	 .loc 2 101 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344 0000 80B5     	 push {r7,lr}
 345              	.LCFI36:
 346              	 .cfi_def_cfa_offset 8
 347              	 .cfi_offset 7,-8
 348              	 .cfi_offset 14,-4
 349 0002 84B0     	 sub sp,sp,#16
 350              	.LCFI37:
 351              	 .cfi_def_cfa_offset 24
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI38:
 354              	 .cfi_def_cfa_register 7
 355 0006 7860     	 str r0,[r7,#4]
 356 0008 3960     	 str r1,[r7]
 102:../Libraries/XMCLib/src/xmc_common.c ****   struct list *tail;
 103:../Libraries/XMCLib/src/xmc_common.c ****   
 104:../Libraries/XMCLib/src/xmc_common.c ****   ((struct list *)item)->next = NULL;
 357              	 .loc 2 104 0
 358 000a 3B68     	 ldr r3,[r7]
 359 000c 0022     	 movs r2,#0
 360 000e 1A60     	 str r2,[r3]
 105:../Libraries/XMCLib/src/xmc_common.c ****   tail = (struct list *)XMC_LIST_GetTail(list);
 361              	 .loc 2 105 0
 362 0010 7868     	 ldr r0,[r7,#4]
 363 0012 FFF7FEFF 	 bl XMC_LIST_GetTail
 364 0016 F860     	 str r0,[r7,#12]
 106:../Libraries/XMCLib/src/xmc_common.c ****   
 107:../Libraries/XMCLib/src/xmc_common.c ****   if (tail == NULL) 
 365              	 .loc 2 107 0
 366 0018 FB68     	 ldr r3,[r7,#12]
 367 001a 002B     	 cmp r3,#0
 368 001c 03D1     	 bne .L17
 108:../Libraries/XMCLib/src/xmc_common.c ****   {
 109:../Libraries/XMCLib/src/xmc_common.c ****     *list = item;
 369              	 .loc 2 109 0
 370 001e 7B68     	 ldr r3,[r7,#4]
 371 0020 3A68     	 ldr r2,[r7]
 372 0022 1A60     	 str r2,[r3]
 373 0024 02E0     	 b .L16
 374              	.L17:
 110:../Libraries/XMCLib/src/xmc_common.c ****   } 
 111:../Libraries/XMCLib/src/xmc_common.c ****   else 
 112:../Libraries/XMCLib/src/xmc_common.c ****   {
 113:../Libraries/XMCLib/src/xmc_common.c ****     tail->next = (struct list *)item;
 375              	 .loc 2 113 0
 376 0026 FB68     	 ldr r3,[r7,#12]
 377 0028 3A68     	 ldr r2,[r7]
 378 002a 1A60     	 str r2,[r3]
 379              	.L16:
 114:../Libraries/XMCLib/src/xmc_common.c ****   }
 115:../Libraries/XMCLib/src/xmc_common.c **** }
 380              	 .loc 2 115 0
 381 002c 1037     	 adds r7,r7,#16
 382              	.LCFI39:
 383              	 .cfi_def_cfa_offset 8
 384 002e BD46     	 mov sp,r7
 385              	.LCFI40:
 386              	 .cfi_def_cfa_register 13
 387              	 
 388 0030 80BD     	 pop {r7,pc}
 389              	 .cfi_endproc
 390              	.LFE131:
 392 0032 00BF     	 .section .text.XMC_LIST_Remove,"ax",%progbits
 393              	 .align 2
 394              	 .global XMC_LIST_Remove
 395              	 .thumb
 396              	 .thumb_func
 398              	XMC_LIST_Remove:
 399              	.LFB132:
 116:../Libraries/XMCLib/src/xmc_common.c **** 
 117:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Remove(XMC_LIST_t *list, void *item)
 118:../Libraries/XMCLib/src/xmc_common.c **** {
 400              	 .loc 2 118 0
 401              	 .cfi_startproc
 402              	 
 403              	 
 404              	 
 405 0000 80B4     	 push {r7}
 406              	.LCFI41:
 407              	 .cfi_def_cfa_offset 4
 408              	 .cfi_offset 7,-4
 409 0002 85B0     	 sub sp,sp,#20
 410              	.LCFI42:
 411              	 .cfi_def_cfa_offset 24
 412 0004 00AF     	 add r7,sp,#0
 413              	.LCFI43:
 414              	 .cfi_def_cfa_register 7
 415 0006 7860     	 str r0,[r7,#4]
 416 0008 3960     	 str r1,[r7]
 119:../Libraries/XMCLib/src/xmc_common.c ****   struct list *right, *left;
 120:../Libraries/XMCLib/src/xmc_common.c ****   
 121:../Libraries/XMCLib/src/xmc_common.c ****   if (*list != NULL) 
 417              	 .loc 2 121 0
 418 000a 7B68     	 ldr r3,[r7,#4]
 419 000c 1B68     	 ldr r3,[r3]
 420 000e 002B     	 cmp r3,#0
 421 0010 21D0     	 beq .L19
 122:../Libraries/XMCLib/src/xmc_common.c ****   {
 123:../Libraries/XMCLib/src/xmc_common.c ****     left = NULL;
 422              	 .loc 2 123 0
 423 0012 0023     	 movs r3,#0
 424 0014 BB60     	 str r3,[r7,#8]
 124:../Libraries/XMCLib/src/xmc_common.c ****     for(right = (struct list *)*list; right != NULL; right = right->next)
 425              	 .loc 2 124 0
 426 0016 7B68     	 ldr r3,[r7,#4]
 427 0018 1B68     	 ldr r3,[r3]
 428 001a FB60     	 str r3,[r7,#12]
 429 001c 18E0     	 b .L21
 430              	.L25:
 125:../Libraries/XMCLib/src/xmc_common.c ****     {
 126:../Libraries/XMCLib/src/xmc_common.c ****       if(right == item) 
 431              	 .loc 2 126 0
 432 001e FA68     	 ldr r2,[r7,#12]
 433 0020 3B68     	 ldr r3,[r7]
 434 0022 9A42     	 cmp r2,r3
 435 0024 0FD1     	 bne .L22
 127:../Libraries/XMCLib/src/xmc_common.c ****       {
 128:../Libraries/XMCLib/src/xmc_common.c ****         if(left == NULL) 
 436              	 .loc 2 128 0
 437 0026 BB68     	 ldr r3,[r7,#8]
 438 0028 002B     	 cmp r3,#0
 439 002a 04D1     	 bne .L23
 129:../Libraries/XMCLib/src/xmc_common.c ****         {
 130:../Libraries/XMCLib/src/xmc_common.c ****           /* First on list */
 131:../Libraries/XMCLib/src/xmc_common.c ****           *list = right->next;
 440              	 .loc 2 131 0
 441 002c FB68     	 ldr r3,[r7,#12]
 442 002e 1A68     	 ldr r2,[r3]
 443 0030 7B68     	 ldr r3,[r7,#4]
 444 0032 1A60     	 str r2,[r3]
 445 0034 03E0     	 b .L24
 446              	.L23:
 132:../Libraries/XMCLib/src/xmc_common.c ****         } 
 133:../Libraries/XMCLib/src/xmc_common.c ****         else 
 134:../Libraries/XMCLib/src/xmc_common.c ****         {
 135:../Libraries/XMCLib/src/xmc_common.c ****           /* Not first on list */
 136:../Libraries/XMCLib/src/xmc_common.c ****           left->next = right->next;
 447              	 .loc 2 136 0
 448 0036 FB68     	 ldr r3,[r7,#12]
 449 0038 1A68     	 ldr r2,[r3]
 450 003a BB68     	 ldr r3,[r7,#8]
 451 003c 1A60     	 str r2,[r3]
 452              	.L24:
 137:../Libraries/XMCLib/src/xmc_common.c ****         }
 138:../Libraries/XMCLib/src/xmc_common.c ****         right->next = NULL;
 453              	 .loc 2 138 0
 454 003e FB68     	 ldr r3,[r7,#12]
 455 0040 0022     	 movs r2,#0
 456 0042 1A60     	 str r2,[r3]
 139:../Libraries/XMCLib/src/xmc_common.c ****         break;
 457              	 .loc 2 139 0
 458 0044 07E0     	 b .L19
 459              	.L22:
 140:../Libraries/XMCLib/src/xmc_common.c ****       }
 141:../Libraries/XMCLib/src/xmc_common.c ****       left = right;
 460              	 .loc 2 141 0 discriminator 2
 461 0046 FB68     	 ldr r3,[r7,#12]
 462 0048 BB60     	 str r3,[r7,#8]
 124:../Libraries/XMCLib/src/xmc_common.c ****     {
 463              	 .loc 2 124 0 discriminator 2
 464 004a FB68     	 ldr r3,[r7,#12]
 465 004c 1B68     	 ldr r3,[r3]
 466 004e FB60     	 str r3,[r7,#12]
 467              	.L21:
 124:../Libraries/XMCLib/src/xmc_common.c ****     {
 468              	 .loc 2 124 0 is_stmt 0 discriminator 1
 469 0050 FB68     	 ldr r3,[r7,#12]
 470 0052 002B     	 cmp r3,#0
 471 0054 E3D1     	 bne .L25
 472              	.L19:
 142:../Libraries/XMCLib/src/xmc_common.c ****     }
 143:../Libraries/XMCLib/src/xmc_common.c ****   }
 144:../Libraries/XMCLib/src/xmc_common.c **** }
 473              	 .loc 2 144 0 is_stmt 1
 474 0056 1437     	 adds r7,r7,#20
 475              	.LCFI44:
 476              	 .cfi_def_cfa_offset 4
 477 0058 BD46     	 mov sp,r7
 478              	.LCFI45:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 005a 5DF8047B 	 ldr r7,[sp],#4
 482              	.LCFI46:
 483              	 .cfi_restore 7
 484              	 .cfi_def_cfa_offset 0
 485 005e 7047     	 bx lr
 486              	 .cfi_endproc
 487              	.LFE132:
 489              	 .section .text.XMC_LIST_Insert,"ax",%progbits
 490              	 .align 2
 491              	 .global XMC_LIST_Insert
 492              	 .thumb
 493              	 .thumb_func
 495              	XMC_LIST_Insert:
 496              	.LFB133:
 145:../Libraries/XMCLib/src/xmc_common.c **** 
 146:../Libraries/XMCLib/src/xmc_common.c **** void XMC_LIST_Insert(XMC_LIST_t *list, void *prev_item, void *new_item)
 147:../Libraries/XMCLib/src/xmc_common.c **** {
 497              	 .loc 2 147 0
 498              	 .cfi_startproc
 499              	 
 500              	 
 501              	 
 502 0000 80B4     	 push {r7}
 503              	.LCFI47:
 504              	 .cfi_def_cfa_offset 4
 505              	 .cfi_offset 7,-4
 506 0002 85B0     	 sub sp,sp,#20
 507              	.LCFI48:
 508              	 .cfi_def_cfa_offset 24
 509 0004 00AF     	 add r7,sp,#0
 510              	.LCFI49:
 511              	 .cfi_def_cfa_register 7
 512 0006 F860     	 str r0,[r7,#12]
 513 0008 B960     	 str r1,[r7,#8]
 514 000a 7A60     	 str r2,[r7,#4]
 148:../Libraries/XMCLib/src/xmc_common.c ****   if (prev_item == NULL) 
 515              	 .loc 2 148 0
 516 000c BB68     	 ldr r3,[r7,#8]
 517 000e 002B     	 cmp r3,#0
 518 0010 07D1     	 bne .L27
 149:../Libraries/XMCLib/src/xmc_common.c ****   {
 150:../Libraries/XMCLib/src/xmc_common.c **** 	((struct list *)new_item)->next = (struct list *)*list;
 519              	 .loc 2 150 0
 520 0012 FB68     	 ldr r3,[r7,#12]
 521 0014 1A68     	 ldr r2,[r3]
 522 0016 7B68     	 ldr r3,[r7,#4]
 523 0018 1A60     	 str r2,[r3]
 151:../Libraries/XMCLib/src/xmc_common.c **** 	*list = new_item;
 524              	 .loc 2 151 0
 525 001a FB68     	 ldr r3,[r7,#12]
 526 001c 7A68     	 ldr r2,[r7,#4]
 527 001e 1A60     	 str r2,[r3]
 528 0020 06E0     	 b .L26
 529              	.L27:
 152:../Libraries/XMCLib/src/xmc_common.c ****   } 
 153:../Libraries/XMCLib/src/xmc_common.c ****   else 
 154:../Libraries/XMCLib/src/xmc_common.c ****   {
 155:../Libraries/XMCLib/src/xmc_common.c ****     ((struct list *)new_item)->next = ((struct list *)prev_item)->next;
 530              	 .loc 2 155 0
 531 0022 BB68     	 ldr r3,[r7,#8]
 532 0024 1A68     	 ldr r2,[r3]
 533 0026 7B68     	 ldr r3,[r7,#4]
 534 0028 1A60     	 str r2,[r3]
 156:../Libraries/XMCLib/src/xmc_common.c ****     ((struct list *)prev_item)->next = (struct list *)new_item;
 535              	 .loc 2 156 0
 536 002a BB68     	 ldr r3,[r7,#8]
 537 002c 7A68     	 ldr r2,[r7,#4]
 538 002e 1A60     	 str r2,[r3]
 539              	.L26:
 157:../Libraries/XMCLib/src/xmc_common.c ****   }
 158:../Libraries/XMCLib/src/xmc_common.c **** }
 540              	 .loc 2 158 0
 541 0030 1437     	 adds r7,r7,#20
 542              	.LCFI50:
 543              	 .cfi_def_cfa_offset 4
 544 0032 BD46     	 mov sp,r7
 545              	.LCFI51:
 546              	 .cfi_def_cfa_register 13
 547              	 
 548 0034 5DF8047B 	 ldr r7,[sp],#4
 549              	.LCFI52:
 550              	 .cfi_restore 7
 551              	 .cfi_def_cfa_offset 0
 552 0038 7047     	 bx lr
 553              	 .cfi_endproc
 554              	.LFE133:
 556 003a 00BF     	 .section .text.XMC_PRIOARRAY_Init,"ax",%progbits
 557              	 .align 2
 558              	 .global XMC_PRIOARRAY_Init
 559              	 .thumb
 560              	 .thumb_func
 562              	XMC_PRIOARRAY_Init:
 563              	.LFB134:
 159:../Libraries/XMCLib/src/xmc_common.c **** 
 160:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Init(XMC_PRIOARRAY_t *prioarray)
 161:../Libraries/XMCLib/src/xmc_common.c **** {
 564              	 .loc 2 161 0
 565              	 .cfi_startproc
 566              	 
 567              	 
 568              	 
 569 0000 80B4     	 push {r7}
 570              	.LCFI53:
 571              	 .cfi_def_cfa_offset 4
 572              	 .cfi_offset 7,-4
 573 0002 83B0     	 sub sp,sp,#12
 574              	.LCFI54:
 575              	 .cfi_def_cfa_offset 16
 576 0004 00AF     	 add r7,sp,#0
 577              	.LCFI55:
 578              	 .cfi_def_cfa_register 7
 579 0006 7860     	 str r0,[r7,#4]
 162:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Init: NULL pointer", prioarray != NULL);
 163:../Libraries/XMCLib/src/xmc_common.c **** 
 164:../Libraries/XMCLib/src/xmc_common.c ****   /* Initialize head, next points to tail, previous to NULL and the priority is MININT */
 165:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].next = prioarray->size + 1;
 580              	 .loc 2 165 0
 581 0008 7B68     	 ldr r3,[r7,#4]
 582 000a 5968     	 ldr r1,[r3,#4]
 583 000c 7B68     	 ldr r3,[r7,#4]
 584 000e 1A68     	 ldr r2,[r3]
 585 0010 1346     	 mov r3,r2
 586 0012 5B00     	 lsls r3,r3,#1
 587 0014 1344     	 add r3,r3,r2
 588 0016 9B00     	 lsls r3,r3,#2
 589 0018 0B44     	 add r3,r3,r1
 590 001a 7A68     	 ldr r2,[r7,#4]
 591 001c 1268     	 ldr r2,[r2]
 592 001e 0132     	 adds r2,r2,#1
 593 0020 9A60     	 str r2,[r3,#8]
 166:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].previous = -1;
 594              	 .loc 2 166 0
 595 0022 7B68     	 ldr r3,[r7,#4]
 596 0024 5968     	 ldr r1,[r3,#4]
 597 0026 7B68     	 ldr r3,[r7,#4]
 598 0028 1A68     	 ldr r2,[r3]
 599 002a 1346     	 mov r3,r2
 600 002c 5B00     	 lsls r3,r3,#1
 601 002e 1344     	 add r3,r3,r2
 602 0030 9B00     	 lsls r3,r3,#2
 603 0032 0B44     	 add r3,r3,r1
 604 0034 4FF0FF32 	 mov r2,#-1
 605 0038 5A60     	 str r2,[r3,#4]
 167:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size].priority = INT32_MAX;
 606              	 .loc 2 167 0
 607 003a 7B68     	 ldr r3,[r7,#4]
 608 003c 5968     	 ldr r1,[r3,#4]
 609 003e 7B68     	 ldr r3,[r7,#4]
 610 0040 1A68     	 ldr r2,[r3]
 611 0042 1346     	 mov r3,r2
 612 0044 5B00     	 lsls r3,r3,#1
 613 0046 1344     	 add r3,r3,r2
 614 0048 9B00     	 lsls r3,r3,#2
 615 004a 0B44     	 add r3,r3,r1
 616 004c 6FF00042 	 mvn r2,#-2147483648
 617 0050 1A60     	 str r2,[r3]
 168:../Libraries/XMCLib/src/xmc_common.c **** 
 169:../Libraries/XMCLib/src/xmc_common.c ****   /* Initialize tail, next points to NULL, previous is the head and the priority is MAXINT */
 170:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].next = -1;
 618              	 .loc 2 170 0
 619 0052 7B68     	 ldr r3,[r7,#4]
 620 0054 5968     	 ldr r1,[r3,#4]
 621 0056 7B68     	 ldr r3,[r7,#4]
 622 0058 1B68     	 ldr r3,[r3]
 623 005a 5A1C     	 adds r2,r3,#1
 624 005c 1346     	 mov r3,r2
 625 005e 5B00     	 lsls r3,r3,#1
 626 0060 1344     	 add r3,r3,r2
 627 0062 9B00     	 lsls r3,r3,#2
 628 0064 0B44     	 add r3,r3,r1
 629 0066 4FF0FF32 	 mov r2,#-1
 630 006a 9A60     	 str r2,[r3,#8]
 171:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].previous = prioarray->size;
 631              	 .loc 2 171 0
 632 006c 7B68     	 ldr r3,[r7,#4]
 633 006e 5968     	 ldr r1,[r3,#4]
 634 0070 7B68     	 ldr r3,[r7,#4]
 635 0072 1B68     	 ldr r3,[r3]
 636 0074 5A1C     	 adds r2,r3,#1
 637 0076 1346     	 mov r3,r2
 638 0078 5B00     	 lsls r3,r3,#1
 639 007a 1344     	 add r3,r3,r2
 640 007c 9B00     	 lsls r3,r3,#2
 641 007e 0B44     	 add r3,r3,r1
 642 0080 7A68     	 ldr r2,[r7,#4]
 643 0082 1268     	 ldr r2,[r2]
 644 0084 5A60     	 str r2,[r3,#4]
 172:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[prioarray->size + 1].priority = INT32_MIN;
 645              	 .loc 2 172 0
 646 0086 7B68     	 ldr r3,[r7,#4]
 647 0088 5968     	 ldr r1,[r3,#4]
 648 008a 7B68     	 ldr r3,[r7,#4]
 649 008c 1B68     	 ldr r3,[r3]
 650 008e 5A1C     	 adds r2,r3,#1
 651 0090 1346     	 mov r3,r2
 652 0092 5B00     	 lsls r3,r3,#1
 653 0094 1344     	 add r3,r3,r2
 654 0096 9B00     	 lsls r3,r3,#2
 655 0098 0B44     	 add r3,r3,r1
 656 009a 4FF00042 	 mov r2,#-2147483648
 657 009e 1A60     	 str r2,[r3]
 173:../Libraries/XMCLib/src/xmc_common.c **** 
 174:../Libraries/XMCLib/src/xmc_common.c **** }
 658              	 .loc 2 174 0
 659 00a0 0C37     	 adds r7,r7,#12
 660              	.LCFI56:
 661              	 .cfi_def_cfa_offset 4
 662 00a2 BD46     	 mov sp,r7
 663              	.LCFI57:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 00a4 5DF8047B 	 ldr r7,[sp],#4
 667              	.LCFI58:
 668              	 .cfi_restore 7
 669              	 .cfi_def_cfa_offset 0
 670 00a8 7047     	 bx lr
 671              	 .cfi_endproc
 672              	.LFE134:
 674 00aa 00BF     	 .section .text.XMC_PRIOARRAY_Add,"ax",%progbits
 675              	 .align 2
 676              	 .global XMC_PRIOARRAY_Add
 677              	 .thumb
 678              	 .thumb_func
 680              	XMC_PRIOARRAY_Add:
 681              	.LFB135:
 175:../Libraries/XMCLib/src/xmc_common.c **** 
 176:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Add(XMC_PRIOARRAY_t *prioarray, int32_t item, int32_t priority)
 177:../Libraries/XMCLib/src/xmc_common.c **** {
 682              	 .loc 2 177 0
 683              	 .cfi_startproc
 684              	 
 685              	 
 686 0000 80B5     	 push {r7,lr}
 687              	.LCFI59:
 688              	 .cfi_def_cfa_offset 8
 689              	 .cfi_offset 7,-8
 690              	 .cfi_offset 14,-4
 691 0002 86B0     	 sub sp,sp,#24
 692              	.LCFI60:
 693              	 .cfi_def_cfa_offset 32
 694 0004 00AF     	 add r7,sp,#0
 695              	.LCFI61:
 696              	 .cfi_def_cfa_register 7
 697 0006 F860     	 str r0,[r7,#12]
 698 0008 B960     	 str r1,[r7,#8]
 699 000a 7A60     	 str r2,[r7,#4]
 178:../Libraries/XMCLib/src/xmc_common.c ****   int32_t next;
 179:../Libraries/XMCLib/src/xmc_common.c ****   int32_t previous;
 180:../Libraries/XMCLib/src/xmc_common.c **** 
 181:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 182:../Libraries/XMCLib/src/xmc_common.c ****   
 183:../Libraries/XMCLib/src/xmc_common.c ****   next = XMC_PRIOARRAY_GetHead(prioarray);
 700              	 .loc 2 183 0
 701 000c F868     	 ldr r0,[r7,#12]
 702 000e FFF7FEFF 	 bl XMC_PRIOARRAY_GetHead
 703 0012 7861     	 str r0,[r7,#20]
 184:../Libraries/XMCLib/src/xmc_common.c ****   while (XMC_PRIOARRAY_GetItemPriority(prioarray, next) > priority)
 704              	 .loc 2 184 0
 705 0014 04E0     	 b .L31
 706              	.L32:
 185:../Libraries/XMCLib/src/xmc_common.c ****   {
 186:../Libraries/XMCLib/src/xmc_common.c ****     next = XMC_PRIOARRAY_GetItemNext(prioarray, next);
 707              	 .loc 2 186 0
 708 0016 F868     	 ldr r0,[r7,#12]
 709 0018 7969     	 ldr r1,[r7,#20]
 710 001a FFF7FEFF 	 bl XMC_PRIOARRAY_GetItemNext
 711 001e 7861     	 str r0,[r7,#20]
 712              	.L31:
 184:../Libraries/XMCLib/src/xmc_common.c ****   while (XMC_PRIOARRAY_GetItemPriority(prioarray, next) > priority)
 713              	 .loc 2 184 0
 714 0020 F868     	 ldr r0,[r7,#12]
 715 0022 7969     	 ldr r1,[r7,#20]
 716 0024 FFF7FEFF 	 bl XMC_PRIOARRAY_GetItemPriority
 717 0028 0246     	 mov r2,r0
 718 002a 7B68     	 ldr r3,[r7,#4]
 719 002c 9A42     	 cmp r2,r3
 720 002e F2DC     	 bgt .L32
 187:../Libraries/XMCLib/src/xmc_common.c ****   }
 188:../Libraries/XMCLib/src/xmc_common.c **** 
 189:../Libraries/XMCLib/src/xmc_common.c ****   previous = prioarray->items[next].previous;
 721              	 .loc 2 189 0
 722 0030 FB68     	 ldr r3,[r7,#12]
 723 0032 5968     	 ldr r1,[r3,#4]
 724 0034 7A69     	 ldr r2,[r7,#20]
 725 0036 1346     	 mov r3,r2
 726 0038 5B00     	 lsls r3,r3,#1
 727 003a 1344     	 add r3,r3,r2
 728 003c 9B00     	 lsls r3,r3,#2
 729 003e 0B44     	 add r3,r3,r1
 730 0040 5B68     	 ldr r3,[r3,#4]
 731 0042 3B61     	 str r3,[r7,#16]
 190:../Libraries/XMCLib/src/xmc_common.c **** 
 191:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].next = next;
 732              	 .loc 2 191 0
 733 0044 FB68     	 ldr r3,[r7,#12]
 734 0046 5968     	 ldr r1,[r3,#4]
 735 0048 BA68     	 ldr r2,[r7,#8]
 736 004a 1346     	 mov r3,r2
 737 004c 5B00     	 lsls r3,r3,#1
 738 004e 1344     	 add r3,r3,r2
 739 0050 9B00     	 lsls r3,r3,#2
 740 0052 0B44     	 add r3,r3,r1
 741 0054 7A69     	 ldr r2,[r7,#20]
 742 0056 9A60     	 str r2,[r3,#8]
 192:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].previous = previous;
 743              	 .loc 2 192 0
 744 0058 FB68     	 ldr r3,[r7,#12]
 745 005a 5968     	 ldr r1,[r3,#4]
 746 005c BA68     	 ldr r2,[r7,#8]
 747 005e 1346     	 mov r3,r2
 748 0060 5B00     	 lsls r3,r3,#1
 749 0062 1344     	 add r3,r3,r2
 750 0064 9B00     	 lsls r3,r3,#2
 751 0066 0B44     	 add r3,r3,r1
 752 0068 3A69     	 ldr r2,[r7,#16]
 753 006a 5A60     	 str r2,[r3,#4]
 193:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[item].priority = priority;
 754              	 .loc 2 193 0
 755 006c FB68     	 ldr r3,[r7,#12]
 756 006e 5968     	 ldr r1,[r3,#4]
 757 0070 BA68     	 ldr r2,[r7,#8]
 758 0072 1346     	 mov r3,r2
 759 0074 5B00     	 lsls r3,r3,#1
 760 0076 1344     	 add r3,r3,r2
 761 0078 9B00     	 lsls r3,r3,#2
 762 007a 0B44     	 add r3,r3,r1
 763 007c 7A68     	 ldr r2,[r7,#4]
 764 007e 1A60     	 str r2,[r3]
 194:../Libraries/XMCLib/src/xmc_common.c **** 
 195:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[previous].next = item;
 765              	 .loc 2 195 0
 766 0080 FB68     	 ldr r3,[r7,#12]
 767 0082 5968     	 ldr r1,[r3,#4]
 768 0084 3A69     	 ldr r2,[r7,#16]
 769 0086 1346     	 mov r3,r2
 770 0088 5B00     	 lsls r3,r3,#1
 771 008a 1344     	 add r3,r3,r2
 772 008c 9B00     	 lsls r3,r3,#2
 773 008e 0B44     	 add r3,r3,r1
 774 0090 BA68     	 ldr r2,[r7,#8]
 775 0092 9A60     	 str r2,[r3,#8]
 196:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[next].previous = item;
 776              	 .loc 2 196 0
 777 0094 FB68     	 ldr r3,[r7,#12]
 778 0096 5968     	 ldr r1,[r3,#4]
 779 0098 7A69     	 ldr r2,[r7,#20]
 780 009a 1346     	 mov r3,r2
 781 009c 5B00     	 lsls r3,r3,#1
 782 009e 1344     	 add r3,r3,r2
 783 00a0 9B00     	 lsls r3,r3,#2
 784 00a2 0B44     	 add r3,r3,r1
 785 00a4 BA68     	 ldr r2,[r7,#8]
 786 00a6 5A60     	 str r2,[r3,#4]
 197:../Libraries/XMCLib/src/xmc_common.c **** }
 787              	 .loc 2 197 0
 788 00a8 1837     	 adds r7,r7,#24
 789              	.LCFI62:
 790              	 .cfi_def_cfa_offset 8
 791 00aa BD46     	 mov sp,r7
 792              	.LCFI63:
 793              	 .cfi_def_cfa_register 13
 794              	 
 795 00ac 80BD     	 pop {r7,pc}
 796              	 .cfi_endproc
 797              	.LFE135:
 799 00ae 00BF     	 .section .text.XMC_PRIOARRAY_Remove,"ax",%progbits
 800              	 .align 2
 801              	 .global XMC_PRIOARRAY_Remove
 802              	 .thumb
 803              	 .thumb_func
 805              	XMC_PRIOARRAY_Remove:
 806              	.LFB136:
 198:../Libraries/XMCLib/src/xmc_common.c **** 
 199:../Libraries/XMCLib/src/xmc_common.c **** void XMC_PRIOARRAY_Remove(XMC_PRIOARRAY_t *prioarray, int32_t item)
 200:../Libraries/XMCLib/src/xmc_common.c **** {
 807              	 .loc 2 200 0
 808              	 .cfi_startproc
 809              	 
 810              	 
 811              	 
 812 0000 80B4     	 push {r7}
 813              	.LCFI64:
 814              	 .cfi_def_cfa_offset 4
 815              	 .cfi_offset 7,-4
 816 0002 85B0     	 sub sp,sp,#20
 817              	.LCFI65:
 818              	 .cfi_def_cfa_offset 24
 819 0004 00AF     	 add r7,sp,#0
 820              	.LCFI66:
 821              	 .cfi_def_cfa_register 7
 822 0006 7860     	 str r0,[r7,#4]
 823 0008 3960     	 str r1,[r7]
 201:../Libraries/XMCLib/src/xmc_common.c ****   int32_t next;
 202:../Libraries/XMCLib/src/xmc_common.c ****   int32_t previous;
 203:../Libraries/XMCLib/src/xmc_common.c **** 
 204:../Libraries/XMCLib/src/xmc_common.c ****   XMC_ASSERT("XMC_PRIOARRAY_Add: item out of range", (item >= 0) && (item < prioarray->size));
 205:../Libraries/XMCLib/src/xmc_common.c ****   
 206:../Libraries/XMCLib/src/xmc_common.c ****   next = prioarray->items[item].next;
 824              	 .loc 2 206 0
 825 000a 7B68     	 ldr r3,[r7,#4]
 826 000c 5968     	 ldr r1,[r3,#4]
 827 000e 3A68     	 ldr r2,[r7]
 828 0010 1346     	 mov r3,r2
 829 0012 5B00     	 lsls r3,r3,#1
 830 0014 1344     	 add r3,r3,r2
 831 0016 9B00     	 lsls r3,r3,#2
 832 0018 0B44     	 add r3,r3,r1
 833 001a 9B68     	 ldr r3,[r3,#8]
 834 001c FB60     	 str r3,[r7,#12]
 207:../Libraries/XMCLib/src/xmc_common.c ****   previous = prioarray->items[item].previous;
 835              	 .loc 2 207 0
 836 001e 7B68     	 ldr r3,[r7,#4]
 837 0020 5968     	 ldr r1,[r3,#4]
 838 0022 3A68     	 ldr r2,[r7]
 839 0024 1346     	 mov r3,r2
 840 0026 5B00     	 lsls r3,r3,#1
 841 0028 1344     	 add r3,r3,r2
 842 002a 9B00     	 lsls r3,r3,#2
 843 002c 0B44     	 add r3,r3,r1
 844 002e 5B68     	 ldr r3,[r3,#4]
 845 0030 BB60     	 str r3,[r7,#8]
 208:../Libraries/XMCLib/src/xmc_common.c **** 
 209:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[previous].next = next;
 846              	 .loc 2 209 0
 847 0032 7B68     	 ldr r3,[r7,#4]
 848 0034 5968     	 ldr r1,[r3,#4]
 849 0036 BA68     	 ldr r2,[r7,#8]
 850 0038 1346     	 mov r3,r2
 851 003a 5B00     	 lsls r3,r3,#1
 852 003c 1344     	 add r3,r3,r2
 853 003e 9B00     	 lsls r3,r3,#2
 854 0040 0B44     	 add r3,r3,r1
 855 0042 FA68     	 ldr r2,[r7,#12]
 856 0044 9A60     	 str r2,[r3,#8]
 210:../Libraries/XMCLib/src/xmc_common.c ****   prioarray->items[next].previous = previous;
 857              	 .loc 2 210 0
 858 0046 7B68     	 ldr r3,[r7,#4]
 859 0048 5968     	 ldr r1,[r3,#4]
 860 004a FA68     	 ldr r2,[r7,#12]
 861 004c 1346     	 mov r3,r2
 862 004e 5B00     	 lsls r3,r3,#1
 863 0050 1344     	 add r3,r3,r2
 864 0052 9B00     	 lsls r3,r3,#2
 865 0054 0B44     	 add r3,r3,r1
 866 0056 BA68     	 ldr r2,[r7,#8]
 867 0058 5A60     	 str r2,[r3,#4]
 211:../Libraries/XMCLib/src/xmc_common.c **** }
 868              	 .loc 2 211 0
 869 005a 1437     	 adds r7,r7,#20
 870              	.LCFI67:
 871              	 .cfi_def_cfa_offset 4
 872 005c BD46     	 mov sp,r7
 873              	.LCFI68:
 874              	 .cfi_def_cfa_register 13
 875              	 
 876 005e 5DF8047B 	 ldr r7,[sp],#4
 877              	.LCFI69:
 878              	 .cfi_restore 7
 879              	 .cfi_def_cfa_offset 0
 880 0062 7047     	 bx lr
 881              	 .cfi_endproc
 882              	.LFE136:
 884              	 .text
 885              	.Letext0:
 886              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 887              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 888              	 .file 5 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_common.c
    {standard input}:20     .text.XMC_PRIOARRAY_GetHead:00000000 $t
    {standard input}:24     .text.XMC_PRIOARRAY_GetHead:00000000 XMC_PRIOARRAY_GetHead
    {standard input}:72     .text.XMC_PRIOARRAY_GetItemPriority:00000000 $t
    {standard input}:76     .text.XMC_PRIOARRAY_GetItemPriority:00000000 XMC_PRIOARRAY_GetItemPriority
    {standard input}:123    .text.XMC_PRIOARRAY_GetItemNext:00000000 $t
    {standard input}:127    .text.XMC_PRIOARRAY_GetItemNext:00000000 XMC_PRIOARRAY_GetItemNext
    {standard input}:174    .text.XMC_LIST_Init:00000000 $t
    {standard input}:179    .text.XMC_LIST_Init:00000000 XMC_LIST_Init
    {standard input}:219    .text.XMC_LIST_GetHead:00000000 $t
    {standard input}:224    .text.XMC_LIST_GetHead:00000000 XMC_LIST_GetHead
    {standard input}:263    .text.XMC_LIST_GetTail:00000000 $t
    {standard input}:268    .text.XMC_LIST_GetTail:00000000 XMC_LIST_GetTail
    {standard input}:333    .text.XMC_LIST_Add:00000000 $t
    {standard input}:338    .text.XMC_LIST_Add:00000000 XMC_LIST_Add
    {standard input}:393    .text.XMC_LIST_Remove:00000000 $t
    {standard input}:398    .text.XMC_LIST_Remove:00000000 XMC_LIST_Remove
    {standard input}:490    .text.XMC_LIST_Insert:00000000 $t
    {standard input}:495    .text.XMC_LIST_Insert:00000000 XMC_LIST_Insert
    {standard input}:557    .text.XMC_PRIOARRAY_Init:00000000 $t
    {standard input}:562    .text.XMC_PRIOARRAY_Init:00000000 XMC_PRIOARRAY_Init
    {standard input}:675    .text.XMC_PRIOARRAY_Add:00000000 $t
    {standard input}:680    .text.XMC_PRIOARRAY_Add:00000000 XMC_PRIOARRAY_Add
    {standard input}:800    .text.XMC_PRIOARRAY_Remove:00000000 $t
    {standard input}:805    .text.XMC_PRIOARRAY_Remove:00000000 XMC_PRIOARRAY_Remove
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
