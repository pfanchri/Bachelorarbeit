   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "Main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.main,"ax",%progbits
  20              	 .align 2
  21              	 .global main
  22              	 .thumb
  23              	 .thumb_func
  25              	main:
  26              	.LFB234:
  27              	 .file 1 "../Main.c"
   1:../Main.c     **** /*
   2:../Main.c     ****  * Main.c
   3:../Main.c     ****  *
   4:../Main.c     ****  *  Created on: Jun 13, 2016
   5:../Main.c     ****  *      Author: Christof Pfannenm√ºller
   6:../Main.c     ****  */
   7:../Main.c     **** #include "Header_general.h" //including all Header files
   8:../Main.c     **** 
   9:../Main.c     **** 
  10:../Main.c     **** #define SPI_TX_ARRAY_LENGH 20
  11:../Main.c     **** #define SPI_RX_ARRAY_LENGH 20
  12:../Main.c     **** 
  13:../Main.c     **** int main(void){
  28              	 .loc 1 13 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 90B5     	 push {r4,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 12
  35              	 .cfi_offset 4,-12
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 99B0     	 sub sp,sp,#100
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 112
  41 0004 02AF     	 add r7,sp,#8
  42              	.LCFI2:
  43              	 .cfi_def_cfa 7,104
  14:../Main.c     **** 
  15:../Main.c     **** 	init();
  44              	 .loc 1 15 0
  45 0006 FFF7FEFF 	 bl init
  16:../Main.c     **** 
  17:../Main.c     **** 
  18:../Main.c     **** led_on(0);
  46              	 .loc 1 18 0
  47 000a 0020     	 movs r0,#0
  48 000c FFF7FEFF 	 bl led_on
  19:../Main.c     **** delay(4000000);
  49              	 .loc 1 19 0
  50 0010 5A48     	 ldr r0,.L7
  51 0012 FFF7FEFF 	 bl delay
  20:../Main.c     **** led_off(0);
  52              	 .loc 1 20 0
  53 0016 0020     	 movs r0,#0
  54 0018 FFF7FEFF 	 bl led_off
  21:../Main.c     **** led_on(1);
  55              	 .loc 1 21 0
  56 001c 0120     	 movs r0,#1
  57 001e FFF7FEFF 	 bl led_on
  22:../Main.c     **** delay(4000000);
  58              	 .loc 1 22 0
  59 0022 5648     	 ldr r0,.L7
  60 0024 FFF7FEFF 	 bl delay
  23:../Main.c     **** led_off(0);
  61              	 .loc 1 23 0
  62 0028 0020     	 movs r0,#0
  63 002a FFF7FEFF 	 bl led_off
  24:../Main.c     **** led_on(1);
  64              	 .loc 1 24 0
  65 002e 0120     	 movs r0,#1
  66 0030 FFF7FEFF 	 bl led_on
  25:../Main.c     **** 
  26:../Main.c     **** 
  27:../Main.c     **** 	uint16_t spi_array_tx[SPI_TX_ARRAY_LENGH] = { 0 };
  67              	 .loc 1 27 0
  68 0034 07F12C03 	 add r3,r7,#44
  69 0038 0022     	 movs r2,#0
  70 003a 1A60     	 str r2,[r3]
  71 003c 0433     	 adds r3,r3,#4
  72 003e 0022     	 movs r2,#0
  73 0040 1A60     	 str r2,[r3]
  74 0042 0433     	 adds r3,r3,#4
  75 0044 0022     	 movs r2,#0
  76 0046 1A60     	 str r2,[r3]
  77 0048 0433     	 adds r3,r3,#4
  78 004a 0022     	 movs r2,#0
  79 004c 1A60     	 str r2,[r3]
  80 004e 0433     	 adds r3,r3,#4
  81 0050 0022     	 movs r2,#0
  82 0052 1A60     	 str r2,[r3]
  83 0054 0433     	 adds r3,r3,#4
  84 0056 0022     	 movs r2,#0
  85 0058 1A60     	 str r2,[r3]
  86 005a 0433     	 adds r3,r3,#4
  87 005c 0022     	 movs r2,#0
  88 005e 1A60     	 str r2,[r3]
  89 0060 0433     	 adds r3,r3,#4
  90 0062 0022     	 movs r2,#0
  91 0064 1A60     	 str r2,[r3]
  92 0066 0433     	 adds r3,r3,#4
  93 0068 0022     	 movs r2,#0
  94 006a 1A60     	 str r2,[r3]
  95 006c 0433     	 adds r3,r3,#4
  96 006e 0022     	 movs r2,#0
  97 0070 1A60     	 str r2,[r3]
  98 0072 0433     	 adds r3,r3,#4
  28:../Main.c     **** 	spi_array_tx[0] =0x05;
  99              	 .loc 1 28 0
 100 0074 0523     	 movs r3,#5
 101 0076 BB85     	 strh r3,[r7,#44]
  29:../Main.c     **** 	spi_array_tx[1] =10;
 102              	 .loc 1 29 0
 103 0078 0A23     	 movs r3,#10
 104 007a FB85     	 strh r3,[r7,#46]
  30:../Main.c     **** 	uint16_t spi_array_rx[SPI_RX_ARRAY_LENGH] = { 0 };
 105              	 .loc 1 30 0
 106 007c 3B1D     	 adds r3,r7,#4
 107 007e 0022     	 movs r2,#0
 108 0080 1A60     	 str r2,[r3]
 109 0082 0433     	 adds r3,r3,#4
 110 0084 0022     	 movs r2,#0
 111 0086 1A60     	 str r2,[r3]
 112 0088 0433     	 adds r3,r3,#4
 113 008a 0022     	 movs r2,#0
 114 008c 1A60     	 str r2,[r3]
 115 008e 0433     	 adds r3,r3,#4
 116 0090 0022     	 movs r2,#0
 117 0092 1A60     	 str r2,[r3]
 118 0094 0433     	 adds r3,r3,#4
 119 0096 0022     	 movs r2,#0
 120 0098 1A60     	 str r2,[r3]
 121 009a 0433     	 adds r3,r3,#4
 122 009c 0022     	 movs r2,#0
 123 009e 1A60     	 str r2,[r3]
 124 00a0 0433     	 adds r3,r3,#4
 125 00a2 0022     	 movs r2,#0
 126 00a4 1A60     	 str r2,[r3]
 127 00a6 0433     	 adds r3,r3,#4
 128 00a8 0022     	 movs r2,#0
 129 00aa 1A60     	 str r2,[r3]
 130 00ac 0433     	 adds r3,r3,#4
 131 00ae 0022     	 movs r2,#0
 132 00b0 1A60     	 str r2,[r3]
 133 00b2 0433     	 adds r3,r3,#4
 134 00b4 0022     	 movs r2,#0
 135 00b6 1A60     	 str r2,[r3]
 136 00b8 0433     	 adds r3,r3,#4
  31:../Main.c     **** 	led_on(2);
 137              	 .loc 1 31 0
 138 00ba 0220     	 movs r0,#2
 139 00bc FFF7FEFF 	 bl led_on
  32:../Main.c     **** 
  33:../Main.c     **** 
  34:../Main.c     **** 	set_TDA_status(0,1);
 140              	 .loc 1 34 0
 141 00c0 0020     	 movs r0,#0
 142 00c2 0121     	 movs r1,#1
 143 00c4 FFF7FEFF 	 bl set_TDA_status
  35:../Main.c     **** 
  36:../Main.c     **** 
  37:../Main.c     **** led_on(6);
 144              	 .loc 1 37 0
 145 00c8 0620     	 movs r0,#6
 146 00ca FFF7FEFF 	 bl led_on
  38:../Main.c     **** led_on(7);
 147              	 .loc 1 38 0
 148 00ce 0720     	 movs r0,#7
 149 00d0 FFF7FEFF 	 bl led_on
  39:../Main.c     **** 
  40:../Main.c     **** 			if (spi_array_rx[0]  ==  0 &&spi_array_rx[1]  ==  0&&spi_array_rx[2]  ==  0&&spi_array_rx[3]  ==
 150              	 .loc 1 40 0
 151 00d4 BB88     	 ldrh r3,[r7,#4]
 152 00d6 002B     	 cmp r3,#0
 153 00d8 20D1     	 bne .L2
 154              	 .loc 1 40 0 is_stmt 0 discriminator 1
 155 00da FB88     	 ldrh r3,[r7,#6]
 156 00dc 002B     	 cmp r3,#0
 157 00de 1DD1     	 bne .L2
 158              	 .loc 1 40 0 discriminator 2
 159 00e0 3B89     	 ldrh r3,[r7,#8]
 160 00e2 002B     	 cmp r3,#0
 161 00e4 1AD1     	 bne .L2
 162              	 .loc 1 40 0 discriminator 3
 163 00e6 7B89     	 ldrh r3,[r7,#10]
 164 00e8 002B     	 cmp r3,#0
 165 00ea 17D1     	 bne .L2
 166              	 .loc 1 40 0 discriminator 4
 167 00ec BB89     	 ldrh r3,[r7,#12]
 168 00ee 002B     	 cmp r3,#0
 169 00f0 14D1     	 bne .L2
 170              	 .loc 1 40 0 discriminator 5
 171 00f2 FB89     	 ldrh r3,[r7,#14]
 172 00f4 002B     	 cmp r3,#0
 173 00f6 11D1     	 bne .L2
  41:../Main.c     **** 					&& spi_array_rx[6]  ==  0 &&spi_array_rx[7]  ==  0&&spi_array_rx[7]  ==  0&&spi_array_rx[8]  =
 174              	 .loc 1 41 0 is_stmt 1
 175 00f8 3B8A     	 ldrh r3,[r7,#16]
 176 00fa 002B     	 cmp r3,#0
 177 00fc 0ED1     	 bne .L2
 178              	 .loc 1 41 0 is_stmt 0 discriminator 1
 179 00fe 7B8A     	 ldrh r3,[r7,#18]
 180 0100 002B     	 cmp r3,#0
 181 0102 0BD1     	 bne .L2
 182              	 .loc 1 41 0 discriminator 2
 183 0104 7B8A     	 ldrh r3,[r7,#18]
 184 0106 002B     	 cmp r3,#0
 185 0108 08D1     	 bne .L2
 186              	 .loc 1 41 0 discriminator 3
 187 010a BB8A     	 ldrh r3,[r7,#20]
 188 010c 002B     	 cmp r3,#0
 189 010e 05D1     	 bne .L2
 190              	 .loc 1 41 0 discriminator 4
 191 0110 FB8A     	 ldrh r3,[r7,#22]
 192 0112 002B     	 cmp r3,#0
 193 0114 02D1     	 bne .L2
  42:../Main.c     **** 				led_off(6);
 194              	 .loc 1 42 0 is_stmt 1
 195 0116 0620     	 movs r0,#6
 196 0118 FFF7FEFF 	 bl led_off
 197              	.L2:
  43:../Main.c     **** 			}
  44:../Main.c     **** 
  45:../Main.c     **** 
  46:../Main.c     **** spi_init(spi_master_ch);
 198              	 .loc 1 46 0
 199 011c 184B     	 ldr r3,.L7+4
 200 011e 1B68     	 ldr r3,[r3]
 201 0120 1846     	 mov r0,r3
 202 0122 FFF7FEFF 	 bl spi_init
  47:../Main.c     **** delay(4000000);
 203              	 .loc 1 47 0
 204 0126 1548     	 ldr r0,.L7
 205 0128 FFF7FEFF 	 bl delay
  48:../Main.c     **** delay(4000000);
 206              	 .loc 1 48 0
 207 012c 1348     	 ldr r0,.L7
 208 012e FFF7FEFF 	 bl delay
  49:../Main.c     **** delay(4000000);
 209              	 .loc 1 49 0
 210 0132 1248     	 ldr r0,.L7
 211 0134 FFF7FEFF 	 bl delay
  50:../Main.c     **** 	spi_transfer(spi_master_ch, 0, spi_array_tx, spi_array_rx, 20);
 212              	 .loc 1 50 0
 213 0138 114B     	 ldr r3,.L7+4
 214 013a 1968     	 ldr r1,[r3]
 215 013c 07F12C02 	 add r2,r7,#44
 216 0140 3C1D     	 adds r4,r7,#4
 217 0142 1423     	 movs r3,#20
 218 0144 0093     	 str r3,[sp]
 219 0146 0846     	 mov r0,r1
 220 0148 0021     	 movs r1,#0
 221 014a 2346     	 mov r3,r4
 222 014c FFF7FEFF 	 bl spi_transfer
 223              	.LBB2:
  51:../Main.c     **** 
  52:../Main.c     **** 
  53:../Main.c     **** 
  54:../Main.c     **** 
  55:../Main.c     **** 	for (int var = 0; var < SPI_RX_ARRAY_LENGH; var++) {
 224              	 .loc 1 55 0
 225 0150 0023     	 movs r3,#0
 226 0152 7B65     	 str r3,[r7,#84]
 227 0154 0EE0     	 b .L3
 228              	.L5:
  56:../Main.c     **** 		if (spi_array_rx[var]  !=  0) {
 229              	 .loc 1 56 0
 230 0156 7B6D     	 ldr r3,[r7,#84]
 231 0158 5B00     	 lsls r3,r3,#1
 232 015a 07F15802 	 add r2,r7,#88
 233 015e 1344     	 add r3,r3,r2
 234 0160 33F8543C 	 ldrh r3,[r3,#-84]
 235 0164 002B     	 cmp r3,#0
 236 0166 02D0     	 beq .L4
  57:../Main.c     **** 			led_on(5);
 237              	 .loc 1 57 0
 238 0168 0520     	 movs r0,#5
 239 016a FFF7FEFF 	 bl led_on
 240              	.L4:
  55:../Main.c     **** 		if (spi_array_rx[var]  !=  0) {
 241              	 .loc 1 55 0 discriminator 2
 242 016e 7B6D     	 ldr r3,[r7,#84]
 243 0170 0133     	 adds r3,r3,#1
 244 0172 7B65     	 str r3,[r7,#84]
 245              	.L3:
  55:../Main.c     **** 		if (spi_array_rx[var]  !=  0) {
 246              	 .loc 1 55 0 is_stmt 0 discriminator 1
 247 0174 7B6D     	 ldr r3,[r7,#84]
 248 0176 132B     	 cmp r3,#19
 249 0178 EDDD     	 ble .L5
 250              	.L6:
 251              	.LBE2:
  58:../Main.c     **** 		}
  59:../Main.c     **** 	}
  60:../Main.c     **** 
  61:../Main.c     **** 	while (1) {
  62:../Main.c     **** 
  63:../Main.c     **** 	}
 252              	 .loc 1 63 0 is_stmt 1 discriminator 1
 253 017a FEE7     	 b .L6
 254              	.L8:
 255              	 .align 2
 256              	.L7:
 257 017c 00093D00 	 .word 4000000
 258 0180 00000000 	 .word spi_master_ch
 259              	 .cfi_endproc
 260              	.LFE234:
 262              	 .text
 263              	.Letext0:
 264              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 265              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 266              	 .file 4 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation\\Libraries\\XMCLib\\inc/xmc_usic.h"
 267              	 .file 5 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation/Libraries/CMSIS/Include/core_cm4.h"
 268              	 .file 6 "../Libraries/SPI/spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Main.c
    {standard input}:20     .text.main:00000000 $t
    {standard input}:25     .text.main:00000000 main
    {standard input}:257    .text.main:0000017c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
init
led_on
delay
led_off
set_TDA_status
spi_init
spi_transfer
spi_master_ch
