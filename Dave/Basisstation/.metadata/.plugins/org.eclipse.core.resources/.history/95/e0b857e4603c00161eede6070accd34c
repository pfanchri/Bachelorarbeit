   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_posif.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_POSIF_Stop,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_POSIF_Stop:
  25              	.LFB160:
  26              	 .file 1 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation\\Libraries\\XMCLib\\inc/xmc_posif.h"
   1:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
   2:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @file xmc_posif.h
   3:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @date 2016-03-09
   4:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
   5:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @cond
   6:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **********************************************************************************
   7:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
   9:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * All rights reserved.                        
  11:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *                                             
  12:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Redistribution and use in source and binary forms, with or without           
  13:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * modification,are permitted provided that the following conditions are met:   
  14:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *                                                                              
  15:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   Redistributions of source code must retain the above copyright notice,      
  16:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   this list of conditions and the following disclaimer.                        
  17:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 
  18:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   this list of conditions and the following disclaimer in the documentation    
  20:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   and/or other materials provided with the distribution.                       
  21:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 
  22:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   may be used to endorse or promote products derived from this software without
  24:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *   specific prior written permission.                                           
  25:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *                                                                              
  26:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *                                                                              
  38:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * To improve the quality of the software, users are encouraged to share        
  39:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * dave@infineon.com).                                                          
  41:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **********************************************************************************
  42:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  43:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Change History
  44:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * --------------
  45:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  46:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 2015-02-18:
  47:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *     - Initial version
  48:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *      
  49:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 2015-02-20:
  50:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *     - Driver description added <BR>
  51:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  52:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 2015-06-19:
  53:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *     - Removed version macros and declaration of GetDriverVersion API <BR> 
  54:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  55:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 2015-07-02:
  56:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *     - Updated XMC_POSIF_QD_GetDirection API
  57:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  58:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 2016-03-09:
  59:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *     - Optimization of write only registers
  60:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  61:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @endcond 
  62:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  63:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
  64:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  65:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  66:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #ifndef XMC_POSIF_H
  67:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_H
  68:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  69:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**************************************************************************************************
  70:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * HEADER FILES
  71:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **************************************************************************************************
  72:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #include <xmc_common.h>
  73:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  74:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #if defined(POSIF0)
  75:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #include <xmc_scu.h>
  76:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  77:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
  78:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @addtogroup XMClib
  79:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @{
  80:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
  81:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
  82:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
  83:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @addtogroup POSIF
  84:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @{
  85:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @brief Position Interface Unit (POSIF) driver for the XMC microcontroller family <br>
  86:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  87:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The POSIF unit is a flexible and powerful component for motor control systems that use
  88:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * rotary encoders or hall sensors as feedback loop. It provides interface for motor position and v
  89:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * POSIF unit works with CCU4 and CCU8 to enable position and velocity measurement and to control P
  90:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  91:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Driver is divided in three POSIF functional blocks - Hall Sensor Control (POSIF_HSC), Quadrature
  92:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * MultiChannel Mode (POSIF_MCM). <br>
  93:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
  94:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * POSIF driver features:
  95:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -#  Configuration structure XMC_POSIF_CONFIG_t and initialization function XMC_POSIF_Init() to c
  96:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -# Allows to change the operating mode using XMC_POSIF_SetMode()
  97:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -# Allows the selection of one of the four inputs (A, B, C or D) using XMC_POSIF_SelectInputSour
  98:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * hall0, hall1 and hall2 signals. For quadrature decoder mode, inputs are phase A, phase B and ind
  99:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -#  Hall Sensor Control (APIs prefixed with XMC_POSIF_HSC_) <br>
 100:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_HSC_CONFIG_t and initialization function XMC_POSIF_HSC_Ini
 101:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 	-  Update current and expected hall pattern in shadow register using XMC_POSIF_HSC_SetHallPatte
 102:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 	- Allows immediate shadow transfer using XMC_POSIF_HSC_UpdateHallPattern()
 103:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -#  Quadrature Decoder (APIs prefixed with XMC_POSIF_QD_) <br>
 104:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_QD_CONFIG_t and initialization function XMC_POSIF_QD_Init(
 105:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * 	-  Get direction of rotation using XMC_POSIF_QD_GetDirection()
 106:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -#  MultiChannel Mode (APIs prefixed with XMC_POSIF_MCM_) <br>
 107:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *	-  Configuration structure XMC_POSIF_MCM_CONFIG_t and initialization function XMC_POSIF_MCM_Init
 108:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *	-  Update multichannel pattern in shadow register using XMC_POSIF_MCM_SetMultiChannelPattern()
 109:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *	-  Allows immediate shadow transfer using XMC_POSIF_MCM_UpdateMultiChannelPattern()
 110:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -# User need to call respective init functions to configure POSIF operating mode. e.g to configu
 111:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * call both XMC_POSIF_HSC_Init() and XMC_POSIF_MCM_Init().
 112:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * -# Allows to enable and disable interrupt sources and assign to service request node using XMC_P
 113:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 114:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 115:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /* POSIF is not available on XMC11 and XMC12 devices */
 116:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 117:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**************************************************************************************************
 118:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * MACROS
 119:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **************************************************************************************************
 120:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_PCONF_INSEL_Msk        (0x3fUL << POSIF_PCONF_INSEL0_Pos) /*< Mask for input pins
 121:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_INSEL_MAX              (4U) /*< Maximum possible input selector */
 122:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_HALPS_HALLPAT_Msk      (0x3FUL)
 123:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 124:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC47) || (UC_SERIES == XMC48) |
 125:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0) || ((PTR)== POSIF1) ) /*< Check for val
 126:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #else
 127:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0))  /*< Check for valid module pointer */
 128:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #endif
 129:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 130:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**************************************************************************************************
 131:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * ENUMS
 132:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **************************************************************************************************
 133:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 134:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Defines the return status, to verify the POSIF related API calls. Use type @ref XMC_POSIF_STATU
 135:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 136:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_STATUS
 137:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 138:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_STATUS_OK = 0U,     /**< API fulfills request */
 139:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_STATUS_ERROR        /**< API cannot fulfill request */
 140:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_STATUS_t;
 141:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 142:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 143:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF configurable modes.Use type @ref XMC_POSIF_MODE_t for this enum.
 144:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The members defines the function selector(FSEL) bitfields of \a PCONF register.
 145:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 146:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_MODE
 147:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 148:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_MODE_HALL_SENSOR = 0U, /**< Hall sensor mode */
 149:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_MODE_QD              , /**< Quadrature Decoder mode */
 150:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM             , /**< Standalone Multichannel mode */
 151:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM_QD           /**< Quadrature Decoder + Standalone Multichannel mode */
 152:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_MODE_t;
 153:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 154:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 155:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF configurable input ports.Use type @ref XMC_POSIF_INPUT_PORT_t for this enum.
 156:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The member defines the respective input selector(INSELX) bitfields of \a PCONF register.
 157:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It selects, which input is used for the phase or Hall input function (depending on the module is
 158:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Quadrature Decoder or Hall Sensor Mode). Same enum can be used to configure pattern update signa
 159:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \a PCONF register's \a MSETS bit field.
 160:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 161:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_PORT
 162:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 163:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_A = 0U, /**< INPUT-A */
 164:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_B     , /**< INPUT-B */
 165:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_C     , /**< INPUT-C */
 166:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_D     , /**< INPUT-D */
 167:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_E     , /**< INPUT-E */
 168:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_F     , /**< INPUT-F */
 169:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_G     , /**< INPUT-G */
 170:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_H       /**< INPUT-H */
 171:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_INPUT_PORT_t;
 172:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 173:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 174:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Defines active level of an input signal.Use type @ref XMC_POSIF_INPUT_ACTIVE_LEVEL_t for this e
 175:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 176:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_ACTIVE_LEVEL
 177:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 178:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_HIGH  = 0U, /**< Input - Active High */
 179:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_LOW         /**< Input - Active Low */
 180:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_INPUT_ACTIVE_LEVEL_t;
 181:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 182:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 183:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF input debounce filter configuration.POSIF inputs are connected to low pass filter 
 184:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * this enum is used to configure low pass filters cut off frequency.
 185:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_FILTER_t for this enum.
 186:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The member defines the low pass filter configuration(LPC) bitfield of \a PCONF register.
 187:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 188:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_FILTER
 189:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 190:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_DISABLED     = 0U, /**< No filtering */
 191:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_1_CLOCK_CYCLE    , /**< Filter of 1 Clock Cycle */
 192:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_2_CLOCK_CYCLE    , /**< Filter of 2 Clock Cycles */
 193:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_4_CLOCK_CYCLE    , /**< Filter of 4 Clock Cycles */
 194:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_8_CLOCK_CYCLE    , /**< Filter of 8 Clock Cycles */
 195:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_16_CLOCK_CYCLE   , /**< Filter of 16 Clock Cycles */
 196:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_32_CLOCK_CYCLE   , /**< Filter of 32 Clock Cycles */
 197:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_FILTER_64_CLOCK_CYCLE     /**< Filter of 64 Clock Cycles */
 198:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_FILTER_t;
 199:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 200:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 201:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF events.Use type @ref XMC_POSIF_IRQ_EVENT_t for this enum.
 202:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The member defines available event sources.It is used to configure which event to be used for
 203:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * interrupt generation using \a PFLGE register. [ PFLG,SPFLG,RPFLG]
 204:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 205:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_IRQ_EVENT
 206:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 207:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CHE                  = 0U, /**< Hall Mode : Correct Hall Event */
 208:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_WHE                  = 1U, /**< Hall Mode : Wrong Hall Event */
 209:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_HALL_INPUT           = 2U, /**< Hall Mode : Hall Input update */
 210:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_MCP_SHADOW_TRANSFER  = 4U, /**< Hall Mode + MCM Mode : MC Pattern shadow tran
 211:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_INDX                 = 8U, /**< Quadrature Mode : Index event detection */
 212:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_ERR                  = 9U, /**< Quadrature Mode : Quadrature Phase Error */
 213:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CNT                  = 10U, /**< Quadrature Mode : Quadrature Clock event */
 214:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_DIR                  = 11U, /**< Quadrature Mode : Quadrature Direction chang
 215:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_PCLK                 = 12U  /**< Quadrature Mode : Quadrature period clock ge
 216:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_IRQ_EVENT_t;
 217:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 218:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 219:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF service request lines.Use type @ref XMC_POSIF_SR_ID_t for this enum.
 220:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It used to connect POSIF event to required service request line.
 221:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * in \a PFLGE register for interrupt generation.
 222:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 223:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_SR_ID
 224:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 225:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_SR_ID_0 = 0U, /**< SR-0 */
 226:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_SR_ID_1      /**< SR-1 */
 227:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_SR_ID_t;
 228:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 229:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 230:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines position decoder mode selection.Use type @ref XMC_POSIF_QD_MODE_t for this enum.
 231:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The member defines configuration for the operation of the quadrature decoder mode.
 232:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It used to configure \a QDC register.
 233:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 234:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_MODE
 235:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 236:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_QUADRATURE       = 0U, /**< Standard Quadrature Mode */
 237:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_DIRECTION_COUNT       /**< Direction Count Mode */
 238:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_QD_MODE_t;
 239:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 240:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 241:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines motor rotation direction.Use type @ref XMC_POSIF_QD_DIR_t for this enum.
 242:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * The member defines the direction in quadrature mode.
 243:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 244:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_DIR
 245:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 246:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_COUNTERCLOCKWISE  = 0U, /**< Counter Clockwise */
 247:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_CLOCKWISE              /**< Clockwise */
 248:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_QD_DIR_t;
 249:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 250:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 251:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines frequency of index signal generation.Use type @ref XMC_POSIF_QD_INDEX_GENERATION_t for t
 252:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Member represents available configuration for index marker generation using \a ICM  bit field in
 253:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 254:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_INDEX_GENERATION
 255:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 256:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_NEVER  = 0U, /**< Never generate the index marker signal */
 257:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ONCE      , /**< Generate only once after the first revolution */
 258:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ALWAYS      /**< Index marker generated upon every revolution */
 259:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_QD_INDEX_GENERATION_t;
 260:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 261:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 262:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Defines trigger edge in hall sensor mode.Use type @ref XMC_POSIF_HSC_TRIGGER_EDGE_t for this en
 263:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  It can be used to configure \a PCONF register's \a SPES and \a MSES bit fields.
 264:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 265:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef enum XMC_POSIF_HSC_TRIGGER_EDGE
 266:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 267:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_RISING  = 0U, /**< Rising edge */
 268:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_FALLING      /**< Falling edge */
 269:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_HSC_TRIGGER_EDGE_t;
 270:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 271:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**************************************************************************************************
 272:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * DATA STRUCTURES
 273:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **************************************************************************************************
 274:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 275:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /*Anonymous structure/union guard start*/
 276:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #if defined(__CC_ARM)
 277:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   #pragma push
 278:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   #pragma anon_unions
 279:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #elif defined(__TASKING__)
 280:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   #pragma warning 586
 281:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #endif
 282:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 283:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 284:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 285:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF peripheral register structure.Use type @ref XMC_POSIF_t for this data structure.
 286:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 287:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef POSIF_GLOBAL_TypeDef XMC_POSIF_t;
 288:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 289:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 290:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Defines POSIF quadrature decoder initialization data structure.
 291:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_QD_CONFIG_t for this data structure.
 292:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  It used to configure Quadrature mode using \a QDC register.
 293:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 294:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef struct XMC_POSIF_QD_CONFIG
 295:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 296:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_t mode;      /**< Operational Mode of the quadrature encoder and decoder */
 297:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   union
 298:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   {
 299:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     struct
 300:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     {
 301:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t phase_a: 1;       /**< Phase-A active level configuration */
 302:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t phase_b: 1;       /**< Phase-B active level configuration */
 303:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t phase_leader: 1;  /**< Which of the two phase signals[Phase A or Phase B] leads the 
 304:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 1;
 305:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t index: 2;        /**< Index signal generation control. Use @ref XMC_POSIF_QD_INDEX_G
 306:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 26;
 307:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     };
 308:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     uint32_t qdc;
 309:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   };
 310:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_QD_CONFIG_t;
 311:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 312:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 313:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF hall sensor control initialization data structure.
 314:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_HSC_CONFIG_t for this data structure.
 315:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It used to initialize hall sensor mode configuration using \a PCONF register.
 316:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 317:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef struct XMC_POSIF_HSC_CONFIG
 318:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 319:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   union
 320:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   {
 321:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     struct
 322:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     {
 323:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 4;
 324:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t disable_idle_signal: 1;   /**< Should idle signal be disabled upon wrong hall event?
 325:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 11;
 326:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t sampling_trigger: 1;      /**< Of HSDA and HSDB, which one is to be used to trigger 
 327:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t sampling_trigger_edge: 1; /**< Which edge of the sampling trigger signal is to be co
 328:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 	  uint32_t : 6;
 329:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t external_error_port: 2;    /**< Of the 4 external error ports, which one is to be co
 330:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t external_error_enable: 1;  /**< Should external errors lead to Wrong Hall event? */
 331:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t external_error_level: 1;   /**< What should be the active level of external error si
 332:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t: 4;
 333:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     };
 334:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     uint32_t hall_config;
 335:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   };
 336:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_HSC_CONFIG_t;
 337:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 338:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 339:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Defines POSIF multi-channel mode initialization data structure.
 340:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_MCM_CONFIG_t for this data structure.
 341:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It used to initialize multi channel mode configuration using \a PCONF register.
 342:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 343:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef struct XMC_POSIF_MCM_CONFIG
 344:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 345:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   union
 346:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   {
 347:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     struct
 348:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     {
 349:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 5;
 350:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t pattern_sw_update: 1; /**< should multi channel pattern updated by SW ? */
 351:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 12;
 352:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 	  uint32_t pattern_update_trigger: 3; /**< Of the 8 update triggers, which one is to be considered
 353:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t pattern_trigger_edge: 1;  /**< Which edge of the pattern update trigger is to be con
 354:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t pwm_sync: 2;         /**< Of the 4 pwm sync inputs, which one is to be considered? *
 355:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t : 8;
 356:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     };
 357:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     uint32_t mcm_config;
 358:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   };
 359:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** }XMC_POSIF_MCM_CONFIG_t;
 360:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 361:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 362:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Defines POSIF module initialization data structure.
 363:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_CONFIG_t for this data structure.
 364:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *  It is used to initialize POSIF module using \a PCONF register.
 365:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 366:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** typedef struct XMC_POSIF_CONFIG
 367:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 368:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   union
 369:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   {
 370:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     struct
 371:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     {
 372:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t mode: 2;    /**< POSIF Operational mode. Use @ref XMC_POSIF_MODE_t to configure */
 373:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t :6;
 374:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t input0: 2; /**< Choice of input for Input-1 */
 375:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t input1: 2; /**< Choice of input for Input-2 */
 376:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t input2: 2; /**< Choice of input for Input-3 */
 377:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t :14;
 378:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t filter: 3; /**< Input filter configuration */
 379:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****       uint32_t: 1;
 380:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     };
 381:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     uint32_t pconf;
 382:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   };
 383:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** } XMC_POSIF_CONFIG_t;
 384:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 385:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /*Anonymous structure/union guard end*/
 386:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #if defined(__CC_ARM)
 387:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   #pragma pop
 388:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #elif defined(__TASKING__)
 389:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   #pragma warning restore
 390:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #endif
 391:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 392:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**************************************************************************************************
 393:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * API Prototypes
 394:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  **************************************************************************************************
 395:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #ifdef __cplusplus
 396:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** extern "C" {
 397:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** #endif
 398:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 399:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 400:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 401:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 402:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 403:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 404:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * De-asserts the POSIF module from reset and enables the clock.\n
 405:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bit field depends upon \a peripheral.
 406:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * If running on other than XMC45 device then it will ungate the peripheral clock.
 407:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 408:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 409:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * This is the first API which application must invoke to configure POSIF.
 410:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It is internally called by XMC_POSIF_Init().
 411:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 412:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 413:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Disable(),XMC_POSIF_Init() \n\n\n
 414:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 415:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral);
 416:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 417:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 418:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 419:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 420:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 421:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 422:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Asserts the POSIF module into reset and disables the clock.\n
 423:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * If running on other than XMC45 device then in addition it will gate the peripheral clock.
 424:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bitfield depends upon \a peripheral.
 425:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 426:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 427:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Enable()\n\n\n
 428:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 429:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral);
 430:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 431:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 432:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 433:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param config Pointer to POSIF configuration data(operation mode,input selection and filter conf
 434:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 435:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 436:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 437:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Initialize POSIF module with \a config.\n
 438:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures POSIF global registers.This is the first API which application must invoke to configu
 439:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It sets up parameters common to all the POSIF modes - hall sensor,quadrature decoder and multi-c
 440:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register with mode of operation,input selection and filter configuration.
 441:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 442:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 443:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init(),XMC_POSIF_MCM_Init() \n\n\n
 444:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** */
 445:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t * const config);
 446:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 447:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 448:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 449:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param config Pointer to hall sensor control initialization data of type @ref XMC_POSIF_HSC_CONF
 450:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t  Returns @ref XMC_POSIF_STATUS_OK if configured in Hall Sensor Mode
 451:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *                             else return @ref XMC_POSIF_STATUS_ERROR.
 452:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 453:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 454:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Initializes hall sensor control mode.\n
 455:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register with which POSIF input trigger to be used for
 456:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * sampling hall pattern.Configures \a PCONF register for idle signal generation for wrong hall eve
 457:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 458:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 459:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Hall sensor mode before invocation of t
 460:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 461:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 462:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 463:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 464:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 465:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 466:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 467:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 468:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 469:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns quadrature mode initialization status of type @ref XMC_POSIF_
 470:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 471:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 472:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Initializes quadrature decoder control mode.\n
 473:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register with quadrature mode using @ref XMC_POSIF_QD_MODE_t data structure.
 474:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Initializes \a QDC register with quadrature mode configuration using @ref XMC_POSIF_QD_CONFIG_t 
 475:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 476:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 477:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Quadrature decoder mode before invocati
 478:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 479:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 480:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 481:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 482:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t * c
 483:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 484:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 485:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 486:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 487:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns multi channel pattern initialization status of type @ref XMC_
 488:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 489:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 490:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Initializes multi channel mode in Hall mode, standalone multi-channel mode and quadrature with m
 491:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register with multi channel mode using @ref XMC_POSIF_MCM_CONFIG_t data stru
 492:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 493:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 494:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * It is necessary to call XMC_POSIF_Init first before invocation of this API.
 495:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * For XMC_POSIF_MODE_HALL_SENSOR, it is necessary to have called XMC_POSIF_HSC_Init before invocat
 496:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * For XMC_POSIF_MODE_MCM_QD, it is necessary to have called XMC_POSIF_QD_Init before invocation of
 497:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 498:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 499:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Init(),XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init() \n\n\n
 500:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 501:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 502:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 503:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 504:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 505:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param mode POSIF operating mode of type @ref XMC_POSIF_MODE_t
 506:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 507:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 508:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 509:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures POSIF module for \a mode.\n
 510:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register's a\ FSEL bitfield with \a mode.
 511:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Refer @ref XMC_POSIF_MODE_t for available options.
 512:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 513:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 514:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * POSIF module should be in stopped state while changing the operating mode.
 515:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 516:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 517:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Stop() \n\n\n
 518:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 519:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_SetMode(XMC_POSIF_t *const peripheral, const XMC_POSIF_MODE_t mode)
 520:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 521:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)(POSIF_PCONF_FSEL_Msk)) |
 522:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****                      (((uint32_t)mode << POSIF_PCONF_FSEL_Pos) & (uint32_t)POSIF_PCONF_FSEL_Msk));
 523:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** }
 524:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 525:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 526:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 527:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param input0 Choice of input for input 0 [0-3]
 528:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param input1 Choice of input for input 1 [0-3]
 529:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param input2 Choice of input for input 2 [0-3]
 530:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 531:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 532:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 533:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures which input to be connected to POSIF module. \n
 534:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PCONF register's INSEL0,INSEL1,INSEL2 bit fields with source for the input connect
 535:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \a input1, \a input2 respectively.
 536:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 537:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 538:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures which input is used for the Phase X or Hall input X function depending upon the modul
 539:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * set for Quadrature Decoder or Hall Sensor Mode.
 540:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 541:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 542:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 543:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 544:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** void XMC_POSIF_SelectInputSource(XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input0
 545:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****     const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t input2);
 546:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 547:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 548:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 549:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 550:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 551:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 552:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 553:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Starts POSIF \a peripheral functional state machine.\n
 554:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Starts POSIF state machine for \a peripheral.Configures \a PRUNS register's \a SRB bit field wit
 555:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 556:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Note</b><br>
 557:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Global properties of POSIF along with mode specific properties should have been initialized befo
 558:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * FSM.
 559:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 560:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 561:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Stop(),XMC_POSIF_IsRunning() \n\n\n
 562:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 563:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Start(XMC_POSIF_t *const peripheral)
 564:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
 565:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   peripheral->PRUNS = (uint32_t)POSIF_PRUNS_SRB_Msk;
 566:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** }
 567:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** 
 568:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** /**
 569:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 570:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * @retval None
 571:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 572:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Description</b><br>
 573:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Stops POSIF \a peripheral functional state machine.\n
 574:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Stop POSIF functional state machine and clears current internal status of the \a peripheral.
 575:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * Configures \a PRUNC register's \a CRB bit field with 1.
 576:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  *
 577:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 578:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_IsRunning() \n\n\n
 579:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****  */
 580:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Stop(XMC_POSIF_t *const peripheral)
 581:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** {
  27              	 .loc 1 581 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 582:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h ****   peripheral->PRUNC = (uint32_t)(POSIF_PRUNC_CRB_Msk | POSIF_PRUNC_CSM_Msk);
  43              	 .loc 1 582 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 0322     	 movs r2,#3
  46 000c DA60     	 str r2,[r3,#12]
 583:D:\Bachelorarbeit\Dave\Basisstation\Basisstation\Libraries\XMCLib\inc\xmc_posif.h **** }
  47              	 .loc 1 583 0
  48 000e 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0010 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0012 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0016 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE160:
  63              	 .section .text.XMC_POSIF_Enable,"ax",%progbits
  64              	 .align 2
  65              	 .global XMC_POSIF_Enable
  66              	 .thumb
  67              	 .thumb_func
  69              	XMC_POSIF_Enable:
  70              	.LFB183:
  71              	 .file 2 "../Libraries/XMCLib/src/xmc_posif.c"
   1:../Libraries/XMCLib/src/xmc_posif.c **** /**
   2:../Libraries/XMCLib/src/xmc_posif.c ****  * @file xmc_posif.c
   3:../Libraries/XMCLib/src/xmc_posif.c ****  * @date 2015-06-19
   4:../Libraries/XMCLib/src/xmc_posif.c ****  *
   5:../Libraries/XMCLib/src/xmc_posif.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_posif.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_posif.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_posif.c ****  *
   9:../Libraries/XMCLib/src/xmc_posif.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_posif.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_posif.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_posif.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_posif.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_posif.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_posif.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_posif.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_posif.c ****  * 
  18:../Libraries/XMCLib/src/xmc_posif.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_posif.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_posif.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_posif.c ****  * 
  22:../Libraries/XMCLib/src/xmc_posif.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_posif.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_posif.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_posif.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_posif.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_posif.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_posif.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_posif.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_posif.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_posif.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_posif.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_posif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_posif.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_posif.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_posif.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_posif.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_posif.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_posif.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_posif.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_posif.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_posif.c ****  *
  43:../Libraries/XMCLib/src/xmc_posif.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_posif.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_posif.c ****  *
  46:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-02-18:
  47:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Initial version
  48:../Libraries/XMCLib/src/xmc_posif.c ****  *      
  49:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-02-20:
  50:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Driver description added <BR>
  51:../Libraries/XMCLib/src/xmc_posif.c ****  *
  52:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-04-30:
  53:../Libraries/XMCLib/src/xmc_posif.c ****  *     - XMC_POSIF_Enable and XMC_POSIF_Disable APIs updated for POSIF1 peripheral check <BR>
  54:../Libraries/XMCLib/src/xmc_posif.c ****  *
  55:../Libraries/XMCLib/src/xmc_posif.c ****  * 2015-06-19:
  56:../Libraries/XMCLib/src/xmc_posif.c ****  *     - Removed GetDriverVersion API <BR> 
  57:../Libraries/XMCLib/src/xmc_posif.c ****  * @endcond 
  58:../Libraries/XMCLib/src/xmc_posif.c ****  *
  59:../Libraries/XMCLib/src/xmc_posif.c ****  */
  60:../Libraries/XMCLib/src/xmc_posif.c **** 
  61:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  62:../Libraries/XMCLib/src/xmc_posif.c ****  * HEADER FILES
  63:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_posif.c **** #include <xmc_posif.h>
  65:../Libraries/XMCLib/src/xmc_posif.c **** 
  66:../Libraries/XMCLib/src/xmc_posif.c **** /* POSIF is not available on XMC1100 and XMC1200 */
  67:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF0)
  68:../Libraries/XMCLib/src/xmc_posif.c **** #include <xmc_scu.h>
  69:../Libraries/XMCLib/src/xmc_posif.c **** 
  70:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_posif.c ****  * MACROS
  72:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_PCONF_INSEL_Msk        (0x3fUL << POSIF_PCONF_INSEL0_Pos) /*< Mask for input pins
  74:../Libraries/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_INSEL_MAX              (4U) /*< Maximum possible input selector */
  75:../Libraries/XMCLib/src/xmc_posif.c **** 
  76:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_posif.c ****  * LOCAL ROUTINES
  78:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_posif.c **** #ifdef XMC_ASSERT_ENABLE
  80:../Libraries/XMCLib/src/xmc_posif.c **** __STATIC_INLINE bool XMC_POSIF_IsPeripheralValid(const XMC_POSIF_t *const peripheral)
  81:../Libraries/XMCLib/src/xmc_posif.c **** {
  82:../Libraries/XMCLib/src/xmc_posif.c ****   bool tmp;
  83:../Libraries/XMCLib/src/xmc_posif.c **** 
  84:../Libraries/XMCLib/src/xmc_posif.c ****   tmp = (peripheral == POSIF0);
  85:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)  
  86:../Libraries/XMCLib/src/xmc_posif.c ****   tmp |= (peripheral == POSIF1);
  87:../Libraries/XMCLib/src/xmc_posif.c **** #endif
  88:../Libraries/XMCLib/src/xmc_posif.c **** 
  89:../Libraries/XMCLib/src/xmc_posif.c ****   return tmp;  
  90:../Libraries/XMCLib/src/xmc_posif.c **** }
  91:../Libraries/XMCLib/src/xmc_posif.c **** #endif
  92:../Libraries/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  93:../Libraries/XMCLib/src/xmc_posif.c ****  * API IMPLEMENTATION
  94:../Libraries/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  95:../Libraries/XMCLib/src/xmc_posif.c **** 
  96:../Libraries/XMCLib/src/xmc_posif.c **** /* API to enable the POSIF module */
  97:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral)
  98:../Libraries/XMCLib/src/xmc_posif.c **** {
  72              	 .loc 2 98 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76 0000 80B5     	 push {r7,lr}
  77              	.LCFI6:
  78              	 .cfi_def_cfa_offset 8
  79              	 .cfi_offset 7,-8
  80              	 .cfi_offset 14,-4
  81 0002 82B0     	 sub sp,sp,#8
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  99:../Libraries/XMCLib/src/xmc_posif.c **** #if UC_FAMILY == XMC4
 100:../Libraries/XMCLib/src/xmc_posif.c ****    XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
  88              	 .loc 2 100 0
  89 0008 1020     	 movs r0,#16
  90 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 101:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 102:../Libraries/XMCLib/src/xmc_posif.c **** 
 103:../Libraries/XMCLib/src/xmc_posif.c ****   switch ((uint32_t)peripheral)
  91              	 .loc 2 103 0
  92 000e 7B68     	 ldr r3,[r7,#4]
  93 0010 094A     	 ldr r2,.L7
  94 0012 9342     	 cmp r3,r2
  95 0014 03D0     	 beq .L4
  96 0016 094A     	 ldr r2,.L7+4
  97 0018 9342     	 cmp r3,r2
  98 001a 05D0     	 beq .L5
 104:../Libraries/XMCLib/src/xmc_posif.c ****   {
 105:../Libraries/XMCLib/src/xmc_posif.c ****     case (uint32_t)POSIF0:
 106:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 107:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
 108:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 109:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 111:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 112:../Libraries/XMCLib/src/xmc_posif.c ****       break;
 113:../Libraries/XMCLib/src/xmc_posif.c ****       
 114:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 115:../Libraries/XMCLib/src/xmc_posif.c ****     case (uint32_t)POSIF1:
 116:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 117:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 118:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 119:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 120:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 121:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 122:../Libraries/XMCLib/src/xmc_posif.c ****       break;
 123:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 124:../Libraries/XMCLib/src/xmc_posif.c **** 
 125:../Libraries/XMCLib/src/xmc_posif.c ****     default:
 126:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 127:../Libraries/XMCLib/src/xmc_posif.c ****       break;      
  99              	 .loc 2 127 0
 100 001c 09E0     	 b .L2
 101              	.L4:
 110:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 102              	 .loc 2 110 0
 103 001e 4FF40070 	 mov r0,#512
 104 0022 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 112:../Libraries/XMCLib/src/xmc_posif.c ****       
 105              	 .loc 2 112 0
 106 0026 04E0     	 b .L2
 107              	.L5:
 120:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 108              	 .loc 2 120 0
 109 0028 4FF48060 	 mov r0,#1024
 110 002c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 122:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 111              	 .loc 2 122 0
 112 0030 00BF     	 nop
 113              	.L2:
 128:../Libraries/XMCLib/src/xmc_posif.c ****   }
 129:../Libraries/XMCLib/src/xmc_posif.c **** }
 114              	 .loc 2 129 0
 115 0032 0837     	 adds r7,r7,#8
 116              	.LCFI9:
 117              	 .cfi_def_cfa_offset 8
 118 0034 BD46     	 mov sp,r7
 119              	.LCFI10:
 120              	 .cfi_def_cfa_register 13
 121              	 
 122 0036 80BD     	 pop {r7,pc}
 123              	.L8:
 124              	 .align 2
 125              	.L7:
 126 0038 00800240 	 .word 1073905664
 127 003c 00C00240 	 .word 1073922048
 128              	 .cfi_endproc
 129              	.LFE183:
 131              	 .section .text.XMC_POSIF_Disable,"ax",%progbits
 132              	 .align 2
 133              	 .global XMC_POSIF_Disable
 134              	 .thumb
 135              	 .thumb_func
 137              	XMC_POSIF_Disable:
 138              	.LFB184:
 130:../Libraries/XMCLib/src/xmc_posif.c **** 
 131:../Libraries/XMCLib/src/xmc_posif.c **** /* API to disable the POSIF module */
 132:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral)
 133:../Libraries/XMCLib/src/xmc_posif.c **** {
 139              	 .loc 2 133 0
 140              	 .cfi_startproc
 141              	 
 142              	 
 143 0000 80B5     	 push {r7,lr}
 144              	.LCFI11:
 145              	 .cfi_def_cfa_offset 8
 146              	 .cfi_offset 7,-8
 147              	 .cfi_offset 14,-4
 148 0002 82B0     	 sub sp,sp,#8
 149              	.LCFI12:
 150              	 .cfi_def_cfa_offset 16
 151 0004 00AF     	 add r7,sp,#0
 152              	.LCFI13:
 153              	 .cfi_def_cfa_register 7
 154 0006 7860     	 str r0,[r7,#4]
 134:../Libraries/XMCLib/src/xmc_posif.c ****   switch ((uint32_t)peripheral)
 155              	 .loc 2 134 0
 156 0008 7B68     	 ldr r3,[r7,#4]
 157 000a 0A4A     	 ldr r2,.L14
 158 000c 9342     	 cmp r3,r2
 159 000e 03D0     	 beq .L11
 160 0010 094A     	 ldr r2,.L14+4
 161 0012 9342     	 cmp r3,r2
 162 0014 05D0     	 beq .L12
 135:../Libraries/XMCLib/src/xmc_posif.c ****   {
 136:../Libraries/XMCLib/src/xmc_posif.c ****     case (uint32_t)POSIF0:
 137:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 138:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 139:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 140:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 141:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
 142:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 143:../Libraries/XMCLib/src/xmc_posif.c ****       break;
 144:../Libraries/XMCLib/src/xmc_posif.c ****       
 145:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 146:../Libraries/XMCLib/src/xmc_posif.c ****     case (uint32_t)POSIF1:
 147:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 148:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 149:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 150:../Libraries/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 151:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 152:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 153:../Libraries/XMCLib/src/xmc_posif.c ****       break;
 154:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 155:../Libraries/XMCLib/src/xmc_posif.c ****     
 156:../Libraries/XMCLib/src/xmc_posif.c ****     default:
 157:../Libraries/XMCLib/src/xmc_posif.c ****       XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 158:../Libraries/XMCLib/src/xmc_posif.c ****       break;      
 163              	 .loc 2 158 0
 164 0016 09E0     	 b .L9
 165              	.L11:
 138:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 166              	 .loc 2 138 0
 167 0018 4FF40070 	 mov r0,#512
 168 001c FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 143:../Libraries/XMCLib/src/xmc_posif.c ****       
 169              	 .loc 2 143 0
 170 0020 04E0     	 b .L9
 171              	.L12:
 148:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 172              	 .loc 2 148 0
 173 0022 4FF48060 	 mov r0,#1024
 174 0026 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 153:../Libraries/XMCLib/src/xmc_posif.c **** #endif
 175              	 .loc 2 153 0
 176 002a 00BF     	 nop
 177              	.L9:
 159:../Libraries/XMCLib/src/xmc_posif.c ****   }
 160:../Libraries/XMCLib/src/xmc_posif.c **** }
 178              	 .loc 2 160 0
 179 002c 0837     	 adds r7,r7,#8
 180              	.LCFI14:
 181              	 .cfi_def_cfa_offset 8
 182 002e BD46     	 mov sp,r7
 183              	.LCFI15:
 184              	 .cfi_def_cfa_register 13
 185              	 
 186 0030 80BD     	 pop {r7,pc}
 187              	.L15:
 188 0032 00BF     	 .align 2
 189              	.L14:
 190 0034 00800240 	 .word 1073905664
 191 0038 00C00240 	 .word 1073922048
 192              	 .cfi_endproc
 193              	.LFE184:
 195              	 .section .text.XMC_POSIF_Init,"ax",%progbits
 196              	 .align 2
 197              	 .global XMC_POSIF_Init
 198              	 .thumb
 199              	 .thumb_func
 201              	XMC_POSIF_Init:
 202              	.LFB185:
 161:../Libraries/XMCLib/src/xmc_posif.c **** 
 162:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize POSIF global resources */
 163:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config)
 164:../Libraries/XMCLib/src/xmc_posif.c **** {
 203              	 .loc 2 164 0
 204              	 .cfi_startproc
 205              	 
 206              	 
 207 0000 80B5     	 push {r7,lr}
 208              	.LCFI16:
 209              	 .cfi_def_cfa_offset 8
 210              	 .cfi_offset 7,-8
 211              	 .cfi_offset 14,-4
 212 0002 82B0     	 sub sp,sp,#8
 213              	.LCFI17:
 214              	 .cfi_def_cfa_offset 16
 215 0004 00AF     	 add r7,sp,#0
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 7
 218 0006 7860     	 str r0,[r7,#4]
 219 0008 3960     	 str r1,[r7]
 165:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 166:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:NULL Pointer", (config != (XMC_POSIF_CONFIG_t *)NULL) );
 167:../Libraries/XMCLib/src/xmc_posif.c **** 
 168:../Libraries/XMCLib/src/xmc_posif.c ****   /* Enable the POSIF module */
 169:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Enable(peripheral);
 220              	 .loc 2 169 0
 221 000a 7868     	 ldr r0,[r7,#4]
 222 000c FFF7FEFF 	 bl XMC_POSIF_Enable
 170:../Libraries/XMCLib/src/xmc_posif.c **** 
 171:../Libraries/XMCLib/src/xmc_posif.c ****   /* Stop POSIF */
 172:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Stop(peripheral);
 223              	 .loc 2 172 0
 224 0010 7868     	 ldr r0,[r7,#4]
 225 0012 FFF7FEFF 	 bl XMC_POSIF_Stop
 173:../Libraries/XMCLib/src/xmc_posif.c **** 
 174:../Libraries/XMCLib/src/xmc_posif.c ****   /* Program the operational mode, input selectors and debounce filter */
 175:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = config->pconf;
 226              	 .loc 2 175 0
 227 0016 3B68     	 ldr r3,[r7]
 228 0018 1A68     	 ldr r2,[r3]
 229 001a 7B68     	 ldr r3,[r7,#4]
 230 001c 1A60     	 str r2,[r3]
 176:../Libraries/XMCLib/src/xmc_posif.c **** }
 231              	 .loc 2 176 0
 232 001e 0837     	 adds r7,r7,#8
 233              	.LCFI19:
 234              	 .cfi_def_cfa_offset 8
 235 0020 BD46     	 mov sp,r7
 236              	.LCFI20:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0022 80BD     	 pop {r7,pc}
 240              	 .cfi_endproc
 241              	.LFE185:
 243              	 .section .text.XMC_POSIF_HSC_Init,"ax",%progbits
 244              	 .align 2
 245              	 .global XMC_POSIF_HSC_Init
 246              	 .thumb
 247              	 .thumb_func
 249              	XMC_POSIF_HSC_Init:
 250              	.LFB186:
 177:../Libraries/XMCLib/src/xmc_posif.c **** 
 178:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize hall sensor interface */
 179:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 180:../Libraries/XMCLib/src/xmc_posif.c **** {
 251              	 .loc 2 180 0
 252              	 .cfi_startproc
 253              	 
 254              	 
 255              	 
 256 0000 80B4     	 push {r7}
 257              	.LCFI21:
 258              	 .cfi_def_cfa_offset 4
 259              	 .cfi_offset 7,-4
 260 0002 85B0     	 sub sp,sp,#20
 261              	.LCFI22:
 262              	 .cfi_def_cfa_offset 24
 263 0004 00AF     	 add r7,sp,#0
 264              	.LCFI23:
 265              	 .cfi_def_cfa_register 7
 266 0006 7860     	 str r0,[r7,#4]
 267 0008 3960     	 str r1,[r7]
 181:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 182:../Libraries/XMCLib/src/xmc_posif.c ****   
 183:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:Invalid module pointer\n", XMC_POSIF_IsPeripheralValid(peripheral)
 184:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:NULL Pointer\n", (config != (XMC_POSIF_HSC_CONFIG_t *)NULL) );
 185:../Libraries/XMCLib/src/xmc_posif.c **** 
 186:../Libraries/XMCLib/src/xmc_posif.c ****   if (XMC_POSIF_MODE_HALL_SENSOR == (XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_
 268              	 .loc 2 186 0
 269 000a 7B68     	 ldr r3,[r7,#4]
 270 000c 1B68     	 ldr r3,[r3]
 271 000e DBB2     	 uxtb r3,r3
 272 0010 03F00303 	 and r3,r3,#3
 273 0014 002B     	 cmp r3,#0
 274 0016 09D1     	 bne .L18
 187:../Libraries/XMCLib/src/xmc_posif.c ****   {
 188:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->hall_config;
 275              	 .loc 2 188 0
 276 0018 7B68     	 ldr r3,[r7,#4]
 277 001a 1A68     	 ldr r2,[r3]
 278 001c 3B68     	 ldr r3,[r7]
 279 001e 1B68     	 ldr r3,[r3]
 280 0020 1A43     	 orrs r2,r2,r3
 281 0022 7B68     	 ldr r3,[r7,#4]
 282 0024 1A60     	 str r2,[r3]
 189:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 283              	 .loc 2 189 0
 284 0026 0023     	 movs r3,#0
 285 0028 FB73     	 strb r3,[r7,#15]
 286 002a 01E0     	 b .L19
 287              	.L18:
 190:../Libraries/XMCLib/src/xmc_posif.c ****   }
 191:../Libraries/XMCLib/src/xmc_posif.c ****   else
 192:../Libraries/XMCLib/src/xmc_posif.c ****   {
 193:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 288              	 .loc 2 193 0
 289 002c 0123     	 movs r3,#1
 290 002e FB73     	 strb r3,[r7,#15]
 291              	.L19:
 194:../Libraries/XMCLib/src/xmc_posif.c ****   }
 195:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 292              	 .loc 2 195 0
 293 0030 FB7B     	 ldrb r3,[r7,#15]
 196:../Libraries/XMCLib/src/xmc_posif.c **** }
 294              	 .loc 2 196 0
 295 0032 1846     	 mov r0,r3
 296 0034 1437     	 adds r7,r7,#20
 297              	.LCFI24:
 298              	 .cfi_def_cfa_offset 4
 299 0036 BD46     	 mov sp,r7
 300              	.LCFI25:
 301              	 .cfi_def_cfa_register 13
 302              	 
 303 0038 5DF8047B 	 ldr r7,[sp],#4
 304              	.LCFI26:
 305              	 .cfi_restore 7
 306              	 .cfi_def_cfa_offset 0
 307 003c 7047     	 bx lr
 308              	 .cfi_endproc
 309              	.LFE186:
 311 003e 00BF     	 .section .text.XMC_POSIF_QD_Init,"ax",%progbits
 312              	 .align 2
 313              	 .global XMC_POSIF_QD_Init
 314              	 .thumb
 315              	 .thumb_func
 317              	XMC_POSIF_QD_Init:
 318              	.LFB187:
 197:../Libraries/XMCLib/src/xmc_posif.c **** 
 198:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize quadrature decoder interface */
 199:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t * c
 200:../Libraries/XMCLib/src/xmc_posif.c **** {
 319              	 .loc 2 200 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323              	 
 324 0000 80B4     	 push {r7}
 325              	.LCFI27:
 326              	 .cfi_def_cfa_offset 4
 327              	 .cfi_offset 7,-4
 328 0002 85B0     	 sub sp,sp,#20
 329              	.LCFI28:
 330              	 .cfi_def_cfa_offset 24
 331 0004 00AF     	 add r7,sp,#0
 332              	.LCFI29:
 333              	 .cfi_def_cfa_register 7
 334 0006 7860     	 str r0,[r7,#4]
 335 0008 3960     	 str r1,[r7]
 201:../Libraries/XMCLib/src/xmc_posif.c ****   uint8_t reg;
 202:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 203:../Libraries/XMCLib/src/xmc_posif.c ****   
 204:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 205:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:NULL Pointer", (config != (XMC_POSIF_QD_CONFIG_t *)NULL) );
 206:../Libraries/XMCLib/src/xmc_posif.c **** 
 207:../Libraries/XMCLib/src/xmc_posif.c ****   reg = (uint8_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk);
 336              	 .loc 2 207 0
 337 000a 7B68     	 ldr r3,[r7,#4]
 338 000c 1B68     	 ldr r3,[r3]
 339 000e DBB2     	 uxtb r3,r3
 340 0010 03F00303 	 and r3,r3,#3
 341 0014 BB73     	 strb r3,[r7,#14]
 208:../Libraries/XMCLib/src/xmc_posif.c ****   if (((uint32_t)XMC_POSIF_MODE_QD == reg) || ((uint32_t)XMC_POSIF_MODE_MCM_QD == reg))
 342              	 .loc 2 208 0
 343 0016 BB7B     	 ldrb r3,[r7,#14]
 344 0018 012B     	 cmp r3,#1
 345 001a 02D0     	 beq .L22
 346              	 .loc 2 208 0 is_stmt 0 discriminator 1
 347 001c BB7B     	 ldrb r3,[r7,#14]
 348 001e 032B     	 cmp r3,#3
 349 0020 0ED1     	 bne .L23
 350              	.L22:
 209:../Libraries/XMCLib/src/xmc_posif.c ****   {
 210:../Libraries/XMCLib/src/xmc_posif.c ****     /* Program the quadrature mode */
 211:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= (uint32_t)(config->mode) << POSIF_PCONF_QDCM_Pos;
 351              	 .loc 2 211 0 is_stmt 1
 352 0022 7B68     	 ldr r3,[r7,#4]
 353 0024 1A68     	 ldr r2,[r3]
 354 0026 3B68     	 ldr r3,[r7]
 355 0028 1B78     	 ldrb r3,[r3]
 356 002a 9B00     	 lsls r3,r3,#2
 357 002c 1A43     	 orrs r2,r2,r3
 358 002e 7B68     	 ldr r3,[r7,#4]
 359 0030 1A60     	 str r2,[r3]
 212:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->QDC = config->qdc;
 360              	 .loc 2 212 0
 361 0032 3B68     	 ldr r3,[r7]
 362 0034 5A68     	 ldr r2,[r3,#4]
 363 0036 7B68     	 ldr r3,[r7,#4]
 364 0038 1A66     	 str r2,[r3,#96]
 213:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 365              	 .loc 2 213 0
 366 003a 0023     	 movs r3,#0
 367 003c FB73     	 strb r3,[r7,#15]
 368 003e 01E0     	 b .L24
 369              	.L23:
 214:../Libraries/XMCLib/src/xmc_posif.c ****   }
 215:../Libraries/XMCLib/src/xmc_posif.c ****   else
 216:../Libraries/XMCLib/src/xmc_posif.c ****   {
 217:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 370              	 .loc 2 217 0
 371 0040 0123     	 movs r3,#1
 372 0042 FB73     	 strb r3,[r7,#15]
 373              	.L24:
 218:../Libraries/XMCLib/src/xmc_posif.c ****   }
 219:../Libraries/XMCLib/src/xmc_posif.c ****   
 220:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 374              	 .loc 2 220 0
 375 0044 FB7B     	 ldrb r3,[r7,#15]
 221:../Libraries/XMCLib/src/xmc_posif.c **** }
 376              	 .loc 2 221 0
 377 0046 1846     	 mov r0,r3
 378 0048 1437     	 adds r7,r7,#20
 379              	.LCFI30:
 380              	 .cfi_def_cfa_offset 4
 381 004a BD46     	 mov sp,r7
 382              	.LCFI31:
 383              	 .cfi_def_cfa_register 13
 384              	 
 385 004c 5DF8047B 	 ldr r7,[sp],#4
 386              	.LCFI32:
 387              	 .cfi_restore 7
 388              	 .cfi_def_cfa_offset 0
 389 0050 7047     	 bx lr
 390              	 .cfi_endproc
 391              	.LFE187:
 393 0052 00BF     	 .section .text.XMC_POSIF_MCM_Init,"ax",%progbits
 394              	 .align 2
 395              	 .global XMC_POSIF_MCM_Init
 396              	 .thumb
 397              	 .thumb_func
 399              	XMC_POSIF_MCM_Init:
 400              	.LFB188:
 222:../Libraries/XMCLib/src/xmc_posif.c **** 
 223:../Libraries/XMCLib/src/xmc_posif.c **** /* API to initialize multi-channel mode.
 224:../Libraries/XMCLib/src/xmc_posif.c ****  * This is used in Hall mode, standalone multi-channel mode and quadrature with multi-channel mode
 225:../Libraries/XMCLib/src/xmc_posif.c ****  */
 226:../Libraries/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 227:../Libraries/XMCLib/src/xmc_posif.c **** {
 401              	 .loc 2 227 0
 402              	 .cfi_startproc
 403              	 
 404              	 
 405              	 
 406 0000 80B4     	 push {r7}
 407              	.LCFI33:
 408              	 .cfi_def_cfa_offset 4
 409              	 .cfi_offset 7,-4
 410 0002 85B0     	 sub sp,sp,#20
 411              	.LCFI34:
 412              	 .cfi_def_cfa_offset 24
 413 0004 00AF     	 add r7,sp,#0
 414              	.LCFI35:
 415              	 .cfi_def_cfa_register 7
 416 0006 7860     	 str r0,[r7,#4]
 417 0008 3960     	 str r1,[r7]
 228:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 229:../Libraries/XMCLib/src/xmc_posif.c **** 
 230:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 231:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:NULL Pointer", (config != (XMC_POSIF_MCM_CONFIG_t *)NULL) );
 232:../Libraries/XMCLib/src/xmc_posif.c **** 
 233:../Libraries/XMCLib/src/xmc_posif.c ****   if ((XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk) != XMC_POSIF_MODE_QD
 418              	 .loc 2 233 0
 419 000a 7B68     	 ldr r3,[r7,#4]
 420 000c 1B68     	 ldr r3,[r3]
 421 000e DBB2     	 uxtb r3,r3
 422 0010 03F00303 	 and r3,r3,#3
 423 0014 012B     	 cmp r3,#1
 424 0016 09D0     	 beq .L27
 234:../Libraries/XMCLib/src/xmc_posif.c ****   {
 235:../Libraries/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->mcm_config;
 425              	 .loc 2 235 0
 426 0018 7B68     	 ldr r3,[r7,#4]
 427 001a 1A68     	 ldr r2,[r3]
 428 001c 3B68     	 ldr r3,[r7]
 429 001e 1B68     	 ldr r3,[r3]
 430 0020 1A43     	 orrs r2,r2,r3
 431 0022 7B68     	 ldr r3,[r7,#4]
 432 0024 1A60     	 str r2,[r3]
 236:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 433              	 .loc 2 236 0
 434 0026 0023     	 movs r3,#0
 435 0028 FB73     	 strb r3,[r7,#15]
 436 002a 01E0     	 b .L28
 437              	.L27:
 237:../Libraries/XMCLib/src/xmc_posif.c ****   }
 238:../Libraries/XMCLib/src/xmc_posif.c ****   else
 239:../Libraries/XMCLib/src/xmc_posif.c ****   {
 240:../Libraries/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 438              	 .loc 2 240 0
 439 002c 0123     	 movs r3,#1
 440 002e FB73     	 strb r3,[r7,#15]
 441              	.L28:
 241:../Libraries/XMCLib/src/xmc_posif.c ****   }
 242:../Libraries/XMCLib/src/xmc_posif.c ****   return retval;
 442              	 .loc 2 242 0
 443 0030 FB7B     	 ldrb r3,[r7,#15]
 243:../Libraries/XMCLib/src/xmc_posif.c **** }
 444              	 .loc 2 243 0
 445 0032 1846     	 mov r0,r3
 446 0034 1437     	 adds r7,r7,#20
 447              	.LCFI36:
 448              	 .cfi_def_cfa_offset 4
 449 0036 BD46     	 mov sp,r7
 450              	.LCFI37:
 451              	 .cfi_def_cfa_register 13
 452              	 
 453 0038 5DF8047B 	 ldr r7,[sp],#4
 454              	.LCFI38:
 455              	 .cfi_restore 7
 456              	 .cfi_def_cfa_offset 0
 457 003c 7047     	 bx lr
 458              	 .cfi_endproc
 459              	.LFE188:
 461 003e 00BF     	 .section .text.XMC_POSIF_SelectInputSource,"ax",%progbits
 462              	 .align 2
 463              	 .global XMC_POSIF_SelectInputSource
 464              	 .thumb
 465              	 .thumb_func
 467              	XMC_POSIF_SelectInputSource:
 468              	.LFB189:
 244:../Libraries/XMCLib/src/xmc_posif.c **** 
 245:../Libraries/XMCLib/src/xmc_posif.c **** /* API to configure input source */
 246:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SelectInputSource (XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input
 247:../Libraries/XMCLib/src/xmc_posif.c ****     const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t input2)
 248:../Libraries/XMCLib/src/xmc_posif.c **** {
 469              	 .loc 2 248 0
 470              	 .cfi_startproc
 471              	 
 472              	 
 473              	 
 474 0000 80B4     	 push {r7}
 475              	.LCFI39:
 476              	 .cfi_def_cfa_offset 4
 477              	 .cfi_offset 7,-4
 478 0002 85B0     	 sub sp,sp,#20
 479              	.LCFI40:
 480              	 .cfi_def_cfa_offset 24
 481 0004 00AF     	 add r7,sp,#0
 482              	.LCFI41:
 483              	 .cfi_def_cfa_register 7
 484 0006 7860     	 str r0,[r7,#4]
 485 0008 0846     	 mov r0,r1
 486 000a 1146     	 mov r1,r2
 487 000c 1A46     	 mov r2,r3
 488 000e 0346     	 mov r3,r0
 489 0010 FB70     	 strb r3,[r7,#3]
 490 0012 0B46     	 mov r3,r1
 491 0014 BB70     	 strb r3,[r7,#2]
 492 0016 1346     	 mov r3,r2
 493 0018 7B70     	 strb r3,[r7,#1]
 249:../Libraries/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 250:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peri
 251:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input0", (input0 < XMC_POSIF_INSEL_MAX))
 252:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input1", (input1 < XMC_POSIF_INSEL_MAX))
 253:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input2", (input2 < XMC_POSIF_INSEL_MAX))
 254:../Libraries/XMCLib/src/xmc_posif.c **** 
 255:../Libraries/XMCLib/src/xmc_posif.c ****   reg = (uint32_t)((((uint32_t)input0 << POSIF_PCONF_INSEL0_Pos) & (uint32_t)POSIF_PCONF_INSEL0_Msk
 494              	 .loc 2 255 0
 495 001a FB78     	 ldrb r3,[r7,#3]
 496 001c 1B02     	 lsls r3,r3,#8
 497 001e 03F44072 	 and r2,r3,#768
 256:../Libraries/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 498              	 .loc 2 256 0
 499 0022 BB78     	 ldrb r3,[r7,#2]
 500 0024 9B02     	 lsls r3,r3,#10
 501 0026 03F44063 	 and r3,r3,#3072
 255:../Libraries/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 502              	 .loc 2 255 0
 503 002a 1A43     	 orrs r2,r2,r3
 257:../Libraries/XMCLib/src/xmc_posif.c ****         (((uint32_t)input2 << POSIF_PCONF_INSEL2_Pos) & (uint32_t)POSIF_PCONF_INSEL2_Msk));
 504              	 .loc 2 257 0
 505 002c 7B78     	 ldrb r3,[r7,#1]
 506 002e 1B03     	 lsls r3,r3,#12
 507 0030 03F44053 	 and r3,r3,#12288
 255:../Libraries/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 508              	 .loc 2 255 0
 509 0034 1343     	 orrs r3,r3,r2
 510 0036 FB60     	 str r3,[r7,#12]
 258:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)XMC_POSIF_PCONF_INSEL_Msk) | reg);
 511              	 .loc 2 258 0
 512 0038 7B68     	 ldr r3,[r7,#4]
 513 003a 1B68     	 ldr r3,[r3]
 514 003c 23F47C52 	 bic r2,r3,#16128
 515 0040 FB68     	 ldr r3,[r7,#12]
 516 0042 1A43     	 orrs r2,r2,r3
 517 0044 7B68     	 ldr r3,[r7,#4]
 518 0046 1A60     	 str r2,[r3]
 259:../Libraries/XMCLib/src/xmc_posif.c **** }
 519              	 .loc 2 259 0
 520 0048 1437     	 adds r7,r7,#20
 521              	.LCFI42:
 522              	 .cfi_def_cfa_offset 4
 523 004a BD46     	 mov sp,r7
 524              	.LCFI43:
 525              	 .cfi_def_cfa_register 13
 526              	 
 527 004c 5DF8047B 	 ldr r7,[sp],#4
 528              	.LCFI44:
 529              	 .cfi_restore 7
 530              	 .cfi_def_cfa_offset 0
 531 0050 7047     	 bx lr
 532              	 .cfi_endproc
 533              	.LFE189:
 535 0052 00BF     	 .section .text.XMC_POSIF_SetInterruptNode,"ax",%progbits
 536              	 .align 2
 537              	 .global XMC_POSIF_SetInterruptNode
 538              	 .thumb
 539              	 .thumb_func
 541              	XMC_POSIF_SetInterruptNode:
 542              	.LFB190:
 260:../Libraries/XMCLib/src/xmc_posif.c **** 
 261:../Libraries/XMCLib/src/xmc_posif.c **** /* API to select an interrupt node */
 262:../Libraries/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SetInterruptNode(XMC_POSIF_t *const peripheral, const XMC_POSIF_IRQ_EVENT_t event, c
 263:../Libraries/XMCLib/src/xmc_posif.c **** {
 543              	 .loc 2 263 0
 544              	 .cfi_startproc
 545              	 
 546              	 
 547              	 
 548 0000 80B4     	 push {r7}
 549              	.LCFI45:
 550              	 .cfi_def_cfa_offset 4
 551              	 .cfi_offset 7,-4
 552 0002 85B0     	 sub sp,sp,#20
 553              	.LCFI46:
 554              	 .cfi_def_cfa_offset 24
 555 0004 00AF     	 add r7,sp,#0
 556              	.LCFI47:
 557              	 .cfi_def_cfa_register 7
 558 0006 7860     	 str r0,[r7,#4]
 559 0008 0B46     	 mov r3,r1
 560 000a FB70     	 strb r3,[r7,#3]
 561 000c 1346     	 mov r3,r2
 562 000e BB70     	 strb r3,[r7,#2]
 264:../Libraries/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 265:../Libraries/XMCLib/src/xmc_posif.c ****   
 266:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Invalid module pointer", XMC_POSIF_IsPeripheralValid(perip
 267:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong IRQ event", (event <= XMC_POSIF_IRQ_EVENT_PCLK) );
 268:../Libraries/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong SR ID", (sr <= XMC_POSIF_SR_ID_1) );
 269:../Libraries/XMCLib/src/xmc_posif.c ****   
 270:../Libraries/XMCLib/src/xmc_posif.c ****   reg = peripheral->PFLGE;
 563              	 .loc 2 270 0
 564 0010 7B68     	 ldr r3,[r7,#4]
 565 0012 5B6F     	 ldr r3,[r3,#116]
 566 0014 FB60     	 str r3,[r7,#12]
 271:../Libraries/XMCLib/src/xmc_posif.c ****   reg &= ~((uint32_t)1 << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos));
 567              	 .loc 2 271 0
 568 0016 FB78     	 ldrb r3,[r7,#3]
 569 0018 1033     	 adds r3,r3,#16
 570 001a 1A46     	 mov r2,r3
 571 001c 0123     	 movs r3,#1
 572 001e 9340     	 lsls r3,r3,r2
 573 0020 DB43     	 mvns r3,r3
 574 0022 FA68     	 ldr r2,[r7,#12]
 575 0024 1340     	 ands r3,r3,r2
 576 0026 FB60     	 str r3,[r7,#12]
 272:../Libraries/XMCLib/src/xmc_posif.c ****   reg |= (uint32_t)sr << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos);
 577              	 .loc 2 272 0
 578 0028 BB78     	 ldrb r3,[r7,#2]
 579 002a FA78     	 ldrb r2,[r7,#3]
 580 002c 1032     	 adds r2,r2,#16
 581 002e 9340     	 lsls r3,r3,r2
 582 0030 FA68     	 ldr r2,[r7,#12]
 583 0032 1343     	 orrs r3,r3,r2
 584 0034 FB60     	 str r3,[r7,#12]
 273:../Libraries/XMCLib/src/xmc_posif.c ****   peripheral->PFLGE = reg;
 585              	 .loc 2 273 0
 586 0036 7B68     	 ldr r3,[r7,#4]
 587 0038 FA68     	 ldr r2,[r7,#12]
 588 003a 5A67     	 str r2,[r3,#116]
 274:../Libraries/XMCLib/src/xmc_posif.c **** }
 589              	 .loc 2 274 0
 590 003c 1437     	 adds r7,r7,#20
 591              	.LCFI48:
 592              	 .cfi_def_cfa_offset 4
 593 003e BD46     	 mov sp,r7
 594              	.LCFI49:
 595              	 .cfi_def_cfa_register 13
 596              	 
 597 0040 5DF8047B 	 ldr r7,[sp],#4
 598              	.LCFI50:
 599              	 .cfi_restore 7
 600              	 .cfi_def_cfa_offset 0
 601 0044 7047     	 bx lr
 602              	 .cfi_endproc
 603              	.LFE190:
 605 0046 00BF     	 .text
 606              	.Letext0:
 607              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 608              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 609              	 .file 5 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 610              	 .file 6 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 611              	 .file 7 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation/Libraries/CMSIS/Include/core_cm4.h"
 612              	 .file 8 "D:\\Bachelorarbeit\\Dave\\Basisstation\\Basisstation/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_posif.c
    {standard input}:20     .text.XMC_POSIF_Stop:00000000 $t
    {standard input}:24     .text.XMC_POSIF_Stop:00000000 XMC_POSIF_Stop
    {standard input}:64     .text.XMC_POSIF_Enable:00000000 $t
    {standard input}:69     .text.XMC_POSIF_Enable:00000000 XMC_POSIF_Enable
    {standard input}:126    .text.XMC_POSIF_Enable:00000038 $d
    {standard input}:132    .text.XMC_POSIF_Disable:00000000 $t
    {standard input}:137    .text.XMC_POSIF_Disable:00000000 XMC_POSIF_Disable
    {standard input}:190    .text.XMC_POSIF_Disable:00000034 $d
    {standard input}:196    .text.XMC_POSIF_Init:00000000 $t
    {standard input}:201    .text.XMC_POSIF_Init:00000000 XMC_POSIF_Init
    {standard input}:244    .text.XMC_POSIF_HSC_Init:00000000 $t
    {standard input}:249    .text.XMC_POSIF_HSC_Init:00000000 XMC_POSIF_HSC_Init
    {standard input}:312    .text.XMC_POSIF_QD_Init:00000000 $t
    {standard input}:317    .text.XMC_POSIF_QD_Init:00000000 XMC_POSIF_QD_Init
    {standard input}:394    .text.XMC_POSIF_MCM_Init:00000000 $t
    {standard input}:399    .text.XMC_POSIF_MCM_Init:00000000 XMC_POSIF_MCM_Init
    {standard input}:462    .text.XMC_POSIF_SelectInputSource:00000000 $t
    {standard input}:467    .text.XMC_POSIF_SelectInputSource:00000000 XMC_POSIF_SelectInputSource
    {standard input}:536    .text.XMC_POSIF_SetInterruptNode:00000000 $t
    {standard input}:541    .text.XMC_POSIF_SetInterruptNode:00000000 XMC_POSIF_SetInterruptNode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_EnableClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
